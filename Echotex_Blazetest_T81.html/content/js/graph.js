/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 268.0, "minX": 0.0, "maxY": 10833.0, "series": [{"data": [[0.0, 2747.0], [0.1, 2747.0], [0.2, 2747.0], [0.3, 2747.0], [0.4, 2747.0], [0.5, 2747.0], [0.6, 2747.0], [0.7, 2747.0], [0.8, 2747.0], [0.9, 2747.0], [1.0, 2747.0], [1.1, 2747.0], [1.2, 2747.0], [1.3, 2766.0], [1.4, 2766.0], [1.5, 2766.0], [1.6, 2766.0], [1.7, 2766.0], [1.8, 2766.0], [1.9, 2766.0], [2.0, 2766.0], [2.1, 2766.0], [2.2, 2766.0], [2.3, 2766.0], [2.4, 2766.0], [2.5, 2787.0], [2.6, 2787.0], [2.7, 2787.0], [2.8, 2787.0], [2.9, 2787.0], [3.0, 2787.0], [3.1, 2787.0], [3.2, 2787.0], [3.3, 2787.0], [3.4, 2787.0], [3.5, 2787.0], [3.6, 2787.0], [3.7, 2787.0], [3.8, 2794.0], [3.9, 2794.0], [4.0, 2794.0], [4.1, 2794.0], [4.2, 2794.0], [4.3, 2794.0], [4.4, 2794.0], [4.5, 2794.0], [4.6, 2794.0], [4.7, 2794.0], [4.8, 2794.0], [4.9, 2794.0], [5.0, 2794.0], [5.1, 2794.0], [5.2, 2794.0], [5.3, 2794.0], [5.4, 2794.0], [5.5, 2794.0], [5.6, 2794.0], [5.7, 2794.0], [5.8, 2794.0], [5.9, 2794.0], [6.0, 2794.0], [6.1, 2794.0], [6.2, 2795.0], [6.3, 2795.0], [6.4, 2795.0], [6.5, 2795.0], [6.6, 2795.0], [6.7, 2795.0], [6.8, 2795.0], [6.9, 2795.0], [7.0, 2795.0], [7.1, 2795.0], [7.2, 2795.0], [7.3, 2795.0], [7.4, 2795.0], [7.5, 2798.0], [7.6, 2798.0], [7.7, 2798.0], [7.8, 2798.0], [7.9, 2798.0], [8.0, 2798.0], [8.1, 2798.0], [8.2, 2798.0], [8.3, 2798.0], [8.4, 2798.0], [8.5, 2798.0], [8.6, 2798.0], [8.7, 2803.0], [8.8, 2803.0], [8.9, 2803.0], [9.0, 2803.0], [9.1, 2803.0], [9.2, 2803.0], [9.3, 2803.0], [9.4, 2803.0], [9.5, 2803.0], [9.6, 2803.0], [9.7, 2803.0], [9.8, 2803.0], [9.9, 2808.0], [10.0, 2808.0], [10.1, 2808.0], [10.2, 2808.0], [10.3, 2808.0], [10.4, 2808.0], [10.5, 2808.0], [10.6, 2808.0], [10.7, 2808.0], [10.8, 2808.0], [10.9, 2808.0], [11.0, 2808.0], [11.1, 2808.0], [11.2, 2820.0], [11.3, 2820.0], [11.4, 2820.0], [11.5, 2820.0], [11.6, 2820.0], [11.7, 2820.0], [11.8, 2820.0], [11.9, 2820.0], [12.0, 2820.0], [12.1, 2820.0], [12.2, 2820.0], [12.3, 2820.0], [12.4, 2835.0], [12.5, 2835.0], [12.6, 2835.0], [12.7, 2835.0], [12.8, 2835.0], [12.9, 2835.0], [13.0, 2835.0], [13.1, 2835.0], [13.2, 2835.0], [13.3, 2835.0], [13.4, 2835.0], [13.5, 2835.0], [13.6, 2864.0], [13.7, 2864.0], [13.8, 2864.0], [13.9, 2864.0], [14.0, 2864.0], [14.1, 2864.0], [14.2, 2864.0], [14.3, 2864.0], [14.4, 2864.0], [14.5, 2864.0], [14.6, 2864.0], [14.7, 2864.0], [14.8, 2864.0], [14.9, 2866.0], [15.0, 2866.0], [15.1, 2866.0], [15.2, 2866.0], [15.3, 2866.0], [15.4, 2866.0], [15.5, 2866.0], [15.6, 2866.0], [15.7, 2866.0], [15.8, 2866.0], [15.9, 2866.0], [16.0, 2866.0], [16.1, 2885.0], [16.2, 2885.0], [16.3, 2885.0], [16.4, 2885.0], [16.5, 2885.0], [16.6, 2885.0], [16.7, 2885.0], [16.8, 2885.0], [16.9, 2885.0], [17.0, 2885.0], [17.1, 2885.0], [17.2, 2885.0], [17.3, 2897.0], [17.4, 2897.0], [17.5, 2897.0], [17.6, 2897.0], [17.7, 2897.0], [17.8, 2897.0], [17.9, 2897.0], [18.0, 2897.0], [18.1, 2897.0], [18.2, 2897.0], [18.3, 2897.0], [18.4, 2897.0], [18.5, 2897.0], [18.6, 2898.0], [18.7, 2898.0], [18.8, 2898.0], [18.9, 2898.0], [19.0, 2898.0], [19.1, 2898.0], [19.2, 2898.0], [19.3, 2898.0], [19.4, 2898.0], [19.5, 2898.0], [19.6, 2898.0], [19.7, 2898.0], [19.8, 2908.0], [19.9, 2908.0], [20.0, 2908.0], [20.1, 2908.0], [20.2, 2908.0], [20.3, 2908.0], [20.4, 2908.0], [20.5, 2908.0], [20.6, 2908.0], [20.7, 2908.0], [20.8, 2908.0], [20.9, 2908.0], [21.0, 2912.0], [21.1, 2912.0], [21.2, 2912.0], [21.3, 2912.0], [21.4, 2912.0], [21.5, 2912.0], [21.6, 2912.0], [21.7, 2912.0], [21.8, 2912.0], [21.9, 2912.0], [22.0, 2912.0], [22.1, 2912.0], [22.2, 2912.0], [22.3, 2921.0], [22.4, 2921.0], [22.5, 2921.0], [22.6, 2921.0], [22.7, 2921.0], [22.8, 2921.0], [22.9, 2921.0], [23.0, 2921.0], [23.1, 2921.0], [23.2, 2921.0], [23.3, 2921.0], [23.4, 2921.0], [23.5, 2936.0], [23.6, 2936.0], [23.7, 2936.0], [23.8, 2936.0], [23.9, 2936.0], [24.0, 2936.0], [24.1, 2936.0], [24.2, 2936.0], [24.3, 2936.0], [24.4, 2936.0], [24.5, 2936.0], [24.6, 2936.0], [24.7, 2944.0], [24.8, 2944.0], [24.9, 2944.0], [25.0, 2944.0], [25.1, 2944.0], [25.2, 2944.0], [25.3, 2944.0], [25.4, 2944.0], [25.5, 2944.0], [25.6, 2944.0], [25.7, 2944.0], [25.8, 2944.0], [25.9, 2944.0], [26.0, 2954.0], [26.1, 2954.0], [26.2, 2954.0], [26.3, 2954.0], [26.4, 2954.0], [26.5, 2954.0], [26.6, 2954.0], [26.7, 2954.0], [26.8, 2954.0], [26.9, 2954.0], [27.0, 2954.0], [27.1, 2954.0], [27.2, 2964.0], [27.3, 2964.0], [27.4, 2964.0], [27.5, 2964.0], [27.6, 2964.0], [27.7, 2964.0], [27.8, 2964.0], [27.9, 2964.0], [28.0, 2964.0], [28.1, 2964.0], [28.2, 2964.0], [28.3, 2964.0], [28.4, 2977.0], [28.5, 2977.0], [28.6, 2977.0], [28.7, 2977.0], [28.8, 2977.0], [28.9, 2977.0], [29.0, 2977.0], [29.1, 2977.0], [29.2, 2977.0], [29.3, 2977.0], [29.4, 2977.0], [29.5, 2977.0], [29.6, 2977.0], [29.7, 2982.0], [29.8, 2982.0], [29.9, 2982.0], [30.0, 2982.0], [30.1, 2982.0], [30.2, 2982.0], [30.3, 2982.0], [30.4, 2982.0], [30.5, 2982.0], [30.6, 2982.0], [30.7, 2982.0], [30.8, 2982.0], [30.9, 3059.0], [31.0, 3059.0], [31.1, 3059.0], [31.2, 3059.0], [31.3, 3059.0], [31.4, 3059.0], [31.5, 3059.0], [31.6, 3059.0], [31.7, 3059.0], [31.8, 3059.0], [31.9, 3059.0], [32.0, 3059.0], [32.1, 3134.0], [32.2, 3134.0], [32.3, 3134.0], [32.4, 3134.0], [32.5, 3134.0], [32.6, 3134.0], [32.7, 3134.0], [32.8, 3134.0], [32.9, 3134.0], [33.0, 3134.0], [33.1, 3134.0], [33.2, 3134.0], [33.3, 3134.0], [33.4, 3146.0], [33.5, 3146.0], [33.6, 3146.0], [33.7, 3146.0], [33.8, 3146.0], [33.9, 3146.0], [34.0, 3146.0], [34.1, 3146.0], [34.2, 3146.0], [34.3, 3146.0], [34.4, 3146.0], [34.5, 3146.0], [34.6, 3154.0], [34.7, 3154.0], [34.8, 3154.0], [34.9, 3154.0], [35.0, 3154.0], [35.1, 3154.0], [35.2, 3154.0], [35.3, 3154.0], [35.4, 3154.0], [35.5, 3154.0], [35.6, 3154.0], [35.7, 3154.0], [35.8, 3154.0], [35.9, 3156.0], [36.0, 3156.0], [36.1, 3156.0], [36.2, 3156.0], [36.3, 3156.0], [36.4, 3156.0], [36.5, 3156.0], [36.6, 3156.0], [36.7, 3156.0], [36.8, 3156.0], [36.9, 3156.0], [37.0, 3156.0], [37.1, 3177.0], [37.2, 3177.0], [37.3, 3177.0], [37.4, 3177.0], [37.5, 3177.0], [37.6, 3177.0], [37.7, 3177.0], [37.8, 3177.0], [37.9, 3177.0], [38.0, 3177.0], [38.1, 3177.0], [38.2, 3177.0], [38.3, 3190.0], [38.4, 3190.0], [38.5, 3190.0], [38.6, 3190.0], [38.7, 3190.0], [38.8, 3190.0], [38.9, 3190.0], [39.0, 3190.0], [39.1, 3190.0], [39.2, 3190.0], [39.3, 3190.0], [39.4, 3190.0], [39.5, 3190.0], [39.6, 3193.0], [39.7, 3193.0], [39.8, 3193.0], [39.9, 3193.0], [40.0, 3193.0], [40.1, 3193.0], [40.2, 3193.0], [40.3, 3193.0], [40.4, 3193.0], [40.5, 3193.0], [40.6, 3193.0], [40.7, 3193.0], [40.8, 3222.0], [40.9, 3222.0], [41.0, 3222.0], [41.1, 3222.0], [41.2, 3222.0], [41.3, 3222.0], [41.4, 3222.0], [41.5, 3222.0], [41.6, 3222.0], [41.7, 3222.0], [41.8, 3222.0], [41.9, 3222.0], [42.0, 3236.0], [42.1, 3236.0], [42.2, 3236.0], [42.3, 3236.0], [42.4, 3236.0], [42.5, 3236.0], [42.6, 3236.0], [42.7, 3236.0], [42.8, 3236.0], [42.9, 3236.0], [43.0, 3236.0], [43.1, 3236.0], [43.2, 3236.0], [43.3, 3276.0], [43.4, 3276.0], [43.5, 3276.0], [43.6, 3276.0], [43.7, 3276.0], [43.8, 3276.0], [43.9, 3276.0], [44.0, 3276.0], [44.1, 3276.0], [44.2, 3276.0], [44.3, 3276.0], [44.4, 3276.0], [44.5, 3288.0], [44.6, 3288.0], [44.7, 3288.0], [44.8, 3288.0], [44.9, 3288.0], [45.0, 3288.0], [45.1, 3288.0], [45.2, 3288.0], [45.3, 3288.0], [45.4, 3288.0], [45.5, 3288.0], [45.6, 3288.0], [45.7, 3293.0], [45.8, 3293.0], [45.9, 3293.0], [46.0, 3293.0], [46.1, 3293.0], [46.2, 3293.0], [46.3, 3293.0], [46.4, 3293.0], [46.5, 3293.0], [46.6, 3293.0], [46.7, 3293.0], [46.8, 3293.0], [46.9, 3293.0], [47.0, 3334.0], [47.1, 3334.0], [47.2, 3334.0], [47.3, 3334.0], [47.4, 3334.0], [47.5, 3334.0], [47.6, 3334.0], [47.7, 3334.0], [47.8, 3334.0], [47.9, 3334.0], [48.0, 3334.0], [48.1, 3334.0], [48.2, 3337.0], [48.3, 3337.0], [48.4, 3337.0], [48.5, 3337.0], [48.6, 3337.0], [48.7, 3337.0], [48.8, 3337.0], [48.9, 3337.0], [49.0, 3337.0], [49.1, 3337.0], [49.2, 3337.0], [49.3, 3337.0], [49.4, 3339.0], [49.5, 3339.0], [49.6, 3339.0], [49.7, 3339.0], [49.8, 3339.0], [49.9, 3339.0], [50.0, 3339.0], [50.1, 3339.0], [50.2, 3339.0], [50.3, 3339.0], [50.4, 3339.0], [50.5, 3339.0], [50.6, 3339.0], [50.7, 3367.0], [50.8, 3367.0], [50.9, 3367.0], [51.0, 3367.0], [51.1, 3367.0], [51.2, 3367.0], [51.3, 3367.0], [51.4, 3367.0], [51.5, 3367.0], [51.6, 3367.0], [51.7, 3367.0], [51.8, 3367.0], [51.9, 3373.0], [52.0, 3373.0], [52.1, 3373.0], [52.2, 3373.0], [52.3, 3373.0], [52.4, 3373.0], [52.5, 3373.0], [52.6, 3373.0], [52.7, 3373.0], [52.8, 3373.0], [52.9, 3373.0], [53.0, 3373.0], [53.1, 3391.0], [53.2, 3391.0], [53.3, 3391.0], [53.4, 3391.0], [53.5, 3391.0], [53.6, 3391.0], [53.7, 3391.0], [53.8, 3391.0], [53.9, 3391.0], [54.0, 3391.0], [54.1, 3391.0], [54.2, 3391.0], [54.3, 3391.0], [54.4, 3458.0], [54.5, 3458.0], [54.6, 3458.0], [54.7, 3458.0], [54.8, 3458.0], [54.9, 3458.0], [55.0, 3458.0], [55.1, 3458.0], [55.2, 3458.0], [55.3, 3458.0], [55.4, 3458.0], [55.5, 3458.0], [55.6, 3518.0], [55.7, 3518.0], [55.8, 3518.0], [55.9, 3518.0], [56.0, 3518.0], [56.1, 3518.0], [56.2, 3518.0], [56.3, 3518.0], [56.4, 3518.0], [56.5, 3518.0], [56.6, 3518.0], [56.7, 3518.0], [56.8, 3769.0], [56.9, 3769.0], [57.0, 3769.0], [57.1, 3769.0], [57.2, 3769.0], [57.3, 3769.0], [57.4, 3769.0], [57.5, 3769.0], [57.6, 3769.0], [57.7, 3769.0], [57.8, 3769.0], [57.9, 3769.0], [58.0, 3769.0], [58.1, 3788.0], [58.2, 3788.0], [58.3, 3788.0], [58.4, 3788.0], [58.5, 3788.0], [58.6, 3788.0], [58.7, 3788.0], [58.8, 3788.0], [58.9, 3788.0], [59.0, 3788.0], [59.1, 3788.0], [59.2, 3788.0], [59.3, 3833.0], [59.4, 3833.0], [59.5, 3833.0], [59.6, 3833.0], [59.7, 3833.0], [59.8, 3833.0], [59.9, 3833.0], [60.0, 3833.0], [60.1, 3833.0], [60.2, 3833.0], [60.3, 3833.0], [60.4, 3833.0], [60.5, 3851.0], [60.6, 3851.0], [60.7, 3851.0], [60.8, 3851.0], [60.9, 3851.0], [61.0, 3851.0], [61.1, 3851.0], [61.2, 3851.0], [61.3, 3851.0], [61.4, 3851.0], [61.5, 3851.0], [61.6, 3851.0], [61.7, 3851.0], [61.8, 4033.0], [61.9, 4033.0], [62.0, 4033.0], [62.1, 4033.0], [62.2, 4033.0], [62.3, 4033.0], [62.4, 4033.0], [62.5, 4033.0], [62.6, 4033.0], [62.7, 4033.0], [62.8, 4033.0], [62.9, 4033.0], [63.0, 4119.0], [63.1, 4119.0], [63.2, 4119.0], [63.3, 4119.0], [63.4, 4119.0], [63.5, 4119.0], [63.6, 4119.0], [63.7, 4119.0], [63.8, 4119.0], [63.9, 4119.0], [64.0, 4119.0], [64.1, 4119.0], [64.2, 4307.0], [64.3, 4307.0], [64.4, 4307.0], [64.5, 4307.0], [64.6, 4307.0], [64.7, 4307.0], [64.8, 4307.0], [64.9, 4307.0], [65.0, 4307.0], [65.1, 4307.0], [65.2, 4307.0], [65.3, 4307.0], [65.4, 4307.0], [65.5, 4352.0], [65.6, 4352.0], [65.7, 4352.0], [65.8, 4352.0], [65.9, 4352.0], [66.0, 4352.0], [66.1, 4352.0], [66.2, 4352.0], [66.3, 4352.0], [66.4, 4352.0], [66.5, 4352.0], [66.6, 4352.0], [66.7, 4414.0], [66.8, 4414.0], [66.9, 4414.0], [67.0, 4414.0], [67.1, 4414.0], [67.2, 4414.0], [67.3, 4414.0], [67.4, 4414.0], [67.5, 4414.0], [67.6, 4414.0], [67.7, 4414.0], [67.8, 4414.0], [67.9, 4414.0], [68.0, 4471.0], [68.1, 4471.0], [68.2, 4471.0], [68.3, 4471.0], [68.4, 4471.0], [68.5, 4471.0], [68.6, 4471.0], [68.7, 4471.0], [68.8, 4471.0], [68.9, 4471.0], [69.0, 4471.0], [69.1, 4471.0], [69.2, 4730.0], [69.3, 4730.0], [69.4, 4730.0], [69.5, 4730.0], [69.6, 4730.0], [69.7, 4730.0], [69.8, 4730.0], [69.9, 4730.0], [70.0, 4730.0], [70.1, 4730.0], [70.2, 4730.0], [70.3, 4730.0], [70.4, 4739.0], [70.5, 4739.0], [70.6, 4739.0], [70.7, 4739.0], [70.8, 4739.0], [70.9, 4739.0], [71.0, 4739.0], [71.1, 4739.0], [71.2, 4739.0], [71.3, 4739.0], [71.4, 4739.0], [71.5, 4739.0], [71.6, 4739.0], [71.7, 4894.0], [71.8, 4894.0], [71.9, 4894.0], [72.0, 4894.0], [72.1, 4894.0], [72.2, 4894.0], [72.3, 4894.0], [72.4, 4894.0], [72.5, 4894.0], [72.6, 4894.0], [72.7, 4894.0], [72.8, 4894.0], [72.9, 5033.0], [73.0, 5033.0], [73.1, 5033.0], [73.2, 5033.0], [73.3, 5033.0], [73.4, 5033.0], [73.5, 5033.0], [73.6, 5033.0], [73.7, 5033.0], [73.8, 5033.0], [73.9, 5033.0], [74.0, 5033.0], [74.1, 5054.0], [74.2, 5054.0], [74.3, 5054.0], [74.4, 5054.0], [74.5, 5054.0], [74.6, 5054.0], [74.7, 5054.0], [74.8, 5054.0], [74.9, 5054.0], [75.0, 5054.0], [75.1, 5054.0], [75.2, 5054.0], [75.3, 5054.0], [75.4, 5116.0], [75.5, 5116.0], [75.6, 5116.0], [75.7, 5116.0], [75.8, 5116.0], [75.9, 5116.0], [76.0, 5116.0], [76.1, 5116.0], [76.2, 5116.0], [76.3, 5116.0], [76.4, 5116.0], [76.5, 5116.0], [76.6, 5194.0], [76.7, 5194.0], [76.8, 5194.0], [76.9, 5194.0], [77.0, 5194.0], [77.1, 5194.0], [77.2, 5194.0], [77.3, 5194.0], [77.4, 5194.0], [77.5, 5194.0], [77.6, 5194.0], [77.7, 5194.0], [77.8, 5571.0], [77.9, 5571.0], [78.0, 5571.0], [78.1, 5571.0], [78.2, 5571.0], [78.3, 5571.0], [78.4, 5571.0], [78.5, 5571.0], [78.6, 5571.0], [78.7, 5571.0], [78.8, 5571.0], [78.9, 5571.0], [79.0, 5571.0], [79.1, 5898.0], [79.2, 5898.0], [79.3, 5898.0], [79.4, 5898.0], [79.5, 5898.0], [79.6, 5898.0], [79.7, 5898.0], [79.8, 5898.0], [79.9, 5898.0], [80.0, 5898.0], [80.1, 5898.0], [80.2, 5898.0], [80.3, 5914.0], [80.4, 5914.0], [80.5, 5914.0], [80.6, 5914.0], [80.7, 5914.0], [80.8, 5914.0], [80.9, 5914.0], [81.0, 5914.0], [81.1, 5914.0], [81.2, 5914.0], [81.3, 5914.0], [81.4, 5914.0], [81.5, 5959.0], [81.6, 5959.0], [81.7, 5959.0], [81.8, 5959.0], [81.9, 5959.0], [82.0, 5959.0], [82.1, 5959.0], [82.2, 5959.0], [82.3, 5959.0], [82.4, 5959.0], [82.5, 5959.0], [82.6, 5959.0], [82.7, 5959.0], [82.8, 6027.0], [82.9, 6027.0], [83.0, 6027.0], [83.1, 6027.0], [83.2, 6027.0], [83.3, 6027.0], [83.4, 6027.0], [83.5, 6027.0], [83.6, 6027.0], [83.7, 6027.0], [83.8, 6027.0], [83.9, 6027.0], [84.0, 6027.0], [84.1, 6027.0], [84.2, 6027.0], [84.3, 6027.0], [84.4, 6027.0], [84.5, 6027.0], [84.6, 6027.0], [84.7, 6027.0], [84.8, 6027.0], [84.9, 6027.0], [85.0, 6027.0], [85.1, 6027.0], [85.2, 6404.0], [85.3, 6404.0], [85.4, 6404.0], [85.5, 6404.0], [85.6, 6404.0], [85.7, 6404.0], [85.8, 6404.0], [85.9, 6404.0], [86.0, 6404.0], [86.1, 6404.0], [86.2, 6404.0], [86.3, 6404.0], [86.4, 6404.0], [86.5, 6412.0], [86.6, 6412.0], [86.7, 6412.0], [86.8, 6412.0], [86.9, 6412.0], [87.0, 6412.0], [87.1, 6412.0], [87.2, 6412.0], [87.3, 6412.0], [87.4, 6412.0], [87.5, 6412.0], [87.6, 6412.0], [87.7, 6798.0], [87.8, 6798.0], [87.9, 6798.0], [88.0, 6798.0], [88.1, 6798.0], [88.2, 6798.0], [88.3, 6798.0], [88.4, 6798.0], [88.5, 6798.0], [88.6, 6798.0], [88.7, 6798.0], [88.8, 6798.0], [88.9, 6835.0], [89.0, 6835.0], [89.1, 6835.0], [89.2, 6835.0], [89.3, 6835.0], [89.4, 6835.0], [89.5, 6835.0], [89.6, 6835.0], [89.7, 6835.0], [89.8, 6835.0], [89.9, 6835.0], [90.0, 6835.0], [90.1, 6835.0], [90.2, 7073.0], [90.3, 7073.0], [90.4, 7073.0], [90.5, 7073.0], [90.6, 7073.0], [90.7, 7073.0], [90.8, 7073.0], [90.9, 7073.0], [91.0, 7073.0], [91.1, 7073.0], [91.2, 7073.0], [91.3, 7073.0], [91.4, 7140.0], [91.5, 7140.0], [91.6, 7140.0], [91.7, 7140.0], [91.8, 7140.0], [91.9, 7140.0], [92.0, 7140.0], [92.1, 7140.0], [92.2, 7140.0], [92.3, 7140.0], [92.4, 7140.0], [92.5, 7140.0], [92.6, 7666.0], [92.7, 7666.0], [92.8, 7666.0], [92.9, 7666.0], [93.0, 7666.0], [93.1, 7666.0], [93.2, 7666.0], [93.3, 7666.0], [93.4, 7666.0], [93.5, 7666.0], [93.6, 7666.0], [93.7, 7666.0], [93.8, 7666.0], [93.9, 7670.0], [94.0, 7670.0], [94.1, 7670.0], [94.2, 7670.0], [94.3, 7670.0], [94.4, 7670.0], [94.5, 7670.0], [94.6, 7670.0], [94.7, 7670.0], [94.8, 7670.0], [94.9, 7670.0], [95.0, 7670.0], [95.1, 7695.0], [95.2, 7695.0], [95.3, 7695.0], [95.4, 7695.0], [95.5, 7695.0], [95.6, 7695.0], [95.7, 7695.0], [95.8, 7695.0], [95.9, 7695.0], [96.0, 7695.0], [96.1, 7695.0], [96.2, 7695.0], [96.3, 7725.0], [96.4, 7725.0], [96.5, 7725.0], [96.6, 7725.0], [96.7, 7725.0], [96.8, 7725.0], [96.9, 7725.0], [97.0, 7725.0], [97.1, 7725.0], [97.2, 7725.0], [97.3, 7725.0], [97.4, 7725.0], [97.5, 7725.0], [97.6, 8094.0], [97.7, 8094.0], [97.8, 8094.0], [97.9, 8094.0], [98.0, 8094.0], [98.1, 8094.0], [98.2, 8094.0], [98.3, 8094.0], [98.4, 8094.0], [98.5, 8094.0], [98.6, 8094.0], [98.7, 8094.0], [98.8, 10833.0], [98.9, 10833.0], [99.0, 10833.0], [99.1, 10833.0], [99.2, 10833.0], [99.3, 10833.0], [99.4, 10833.0], [99.5, 10833.0], [99.6, 10833.0], [99.7, 10833.0], [99.8, 10833.0], [99.9, 10833.0], [100.0, 10833.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 556.0], [0.1, 556.0], [0.2, 556.0], [0.3, 556.0], [0.4, 556.0], [0.5, 556.0], [0.6, 556.0], [0.7, 556.0], [0.8, 556.0], [0.9, 556.0], [1.0, 556.0], [1.1, 556.0], [1.2, 556.0], [1.3, 561.0], [1.4, 561.0], [1.5, 561.0], [1.6, 561.0], [1.7, 561.0], [1.8, 561.0], [1.9, 561.0], [2.0, 561.0], [2.1, 561.0], [2.2, 561.0], [2.3, 561.0], [2.4, 561.0], [2.5, 566.0], [2.6, 566.0], [2.7, 566.0], [2.8, 566.0], [2.9, 566.0], [3.0, 566.0], [3.1, 566.0], [3.2, 566.0], [3.3, 566.0], [3.4, 566.0], [3.5, 566.0], [3.6, 566.0], [3.7, 566.0], [3.8, 568.0], [3.9, 568.0], [4.0, 568.0], [4.1, 568.0], [4.2, 568.0], [4.3, 568.0], [4.4, 568.0], [4.5, 568.0], [4.6, 568.0], [4.7, 568.0], [4.8, 568.0], [4.9, 568.0], [5.0, 577.0], [5.1, 577.0], [5.2, 577.0], [5.3, 577.0], [5.4, 577.0], [5.5, 577.0], [5.6, 577.0], [5.7, 577.0], [5.8, 577.0], [5.9, 577.0], [6.0, 577.0], [6.1, 577.0], [6.2, 580.0], [6.3, 580.0], [6.4, 580.0], [6.5, 580.0], [6.6, 580.0], [6.7, 580.0], [6.8, 580.0], [6.9, 580.0], [7.0, 580.0], [7.1, 580.0], [7.2, 580.0], [7.3, 580.0], [7.4, 580.0], [7.5, 580.0], [7.6, 580.0], [7.7, 580.0], [7.8, 580.0], [7.9, 580.0], [8.0, 580.0], [8.1, 580.0], [8.2, 580.0], [8.3, 580.0], [8.4, 580.0], [8.5, 580.0], [8.6, 580.0], [8.7, 581.0], [8.8, 581.0], [8.9, 581.0], [9.0, 581.0], [9.1, 581.0], [9.2, 581.0], [9.3, 581.0], [9.4, 581.0], [9.5, 581.0], [9.6, 581.0], [9.7, 581.0], [9.8, 581.0], [9.9, 581.0], [10.0, 581.0], [10.1, 581.0], [10.2, 581.0], [10.3, 581.0], [10.4, 581.0], [10.5, 581.0], [10.6, 581.0], [10.7, 581.0], [10.8, 581.0], [10.9, 581.0], [11.0, 581.0], [11.1, 581.0], [11.2, 582.0], [11.3, 582.0], [11.4, 582.0], [11.5, 582.0], [11.6, 582.0], [11.7, 582.0], [11.8, 582.0], [11.9, 582.0], [12.0, 582.0], [12.1, 582.0], [12.2, 582.0], [12.3, 582.0], [12.4, 583.0], [12.5, 583.0], [12.6, 583.0], [12.7, 583.0], [12.8, 583.0], [12.9, 583.0], [13.0, 583.0], [13.1, 583.0], [13.2, 583.0], [13.3, 583.0], [13.4, 583.0], [13.5, 583.0], [13.6, 584.0], [13.7, 584.0], [13.8, 584.0], [13.9, 584.0], [14.0, 584.0], [14.1, 584.0], [14.2, 584.0], [14.3, 584.0], [14.4, 584.0], [14.5, 584.0], [14.6, 584.0], [14.7, 584.0], [14.8, 584.0], [14.9, 584.0], [15.0, 584.0], [15.1, 584.0], [15.2, 584.0], [15.3, 584.0], [15.4, 584.0], [15.5, 584.0], [15.6, 584.0], [15.7, 584.0], [15.8, 584.0], [15.9, 584.0], [16.0, 584.0], [16.1, 585.0], [16.2, 585.0], [16.3, 585.0], [16.4, 585.0], [16.5, 585.0], [16.6, 585.0], [16.7, 585.0], [16.8, 585.0], [16.9, 585.0], [17.0, 585.0], [17.1, 585.0], [17.2, 585.0], [17.3, 585.0], [17.4, 585.0], [17.5, 585.0], [17.6, 585.0], [17.7, 585.0], [17.8, 585.0], [17.9, 585.0], [18.0, 585.0], [18.1, 585.0], [18.2, 585.0], [18.3, 585.0], [18.4, 585.0], [18.5, 585.0], [18.6, 586.0], [18.7, 586.0], [18.8, 586.0], [18.9, 586.0], [19.0, 586.0], [19.1, 586.0], [19.2, 586.0], [19.3, 586.0], [19.4, 586.0], [19.5, 586.0], [19.6, 586.0], [19.7, 586.0], [19.8, 590.0], [19.9, 590.0], [20.0, 590.0], [20.1, 590.0], [20.2, 590.0], [20.3, 590.0], [20.4, 590.0], [20.5, 590.0], [20.6, 590.0], [20.7, 590.0], [20.8, 590.0], [20.9, 590.0], [21.0, 591.0], [21.1, 591.0], [21.2, 591.0], [21.3, 591.0], [21.4, 591.0], [21.5, 591.0], [21.6, 591.0], [21.7, 591.0], [21.8, 591.0], [21.9, 591.0], [22.0, 591.0], [22.1, 591.0], [22.2, 591.0], [22.3, 592.0], [22.4, 592.0], [22.5, 592.0], [22.6, 592.0], [22.7, 592.0], [22.8, 592.0], [22.9, 592.0], [23.0, 592.0], [23.1, 592.0], [23.2, 592.0], [23.3, 592.0], [23.4, 592.0], [23.5, 592.0], [23.6, 592.0], [23.7, 592.0], [23.8, 592.0], [23.9, 592.0], [24.0, 592.0], [24.1, 592.0], [24.2, 592.0], [24.3, 592.0], [24.4, 592.0], [24.5, 592.0], [24.6, 592.0], [24.7, 594.0], [24.8, 594.0], [24.9, 594.0], [25.0, 594.0], [25.1, 594.0], [25.2, 594.0], [25.3, 594.0], [25.4, 594.0], [25.5, 594.0], [25.6, 594.0], [25.7, 594.0], [25.8, 594.0], [25.9, 594.0], [26.0, 598.0], [26.1, 598.0], [26.2, 598.0], [26.3, 598.0], [26.4, 598.0], [26.5, 598.0], [26.6, 598.0], [26.7, 598.0], [26.8, 598.0], [26.9, 598.0], [27.0, 598.0], [27.1, 598.0], [27.2, 599.0], [27.3, 599.0], [27.4, 599.0], [27.5, 599.0], [27.6, 599.0], [27.7, 599.0], [27.8, 599.0], [27.9, 599.0], [28.0, 599.0], [28.1, 599.0], [28.2, 599.0], [28.3, 599.0], [28.4, 599.0], [28.5, 599.0], [28.6, 599.0], [28.7, 599.0], [28.8, 599.0], [28.9, 599.0], [29.0, 599.0], [29.1, 599.0], [29.2, 599.0], [29.3, 599.0], [29.4, 599.0], [29.5, 599.0], [29.6, 599.0], [29.7, 601.0], [29.8, 601.0], [29.9, 601.0], [30.0, 601.0], [30.1, 601.0], [30.2, 601.0], [30.3, 601.0], [30.4, 601.0], [30.5, 601.0], [30.6, 601.0], [30.7, 601.0], [30.8, 601.0], [30.9, 607.0], [31.0, 607.0], [31.1, 607.0], [31.2, 607.0], [31.3, 607.0], [31.4, 607.0], [31.5, 607.0], [31.6, 607.0], [31.7, 607.0], [31.8, 607.0], [31.9, 607.0], [32.0, 607.0], [32.1, 612.0], [32.2, 612.0], [32.3, 612.0], [32.4, 612.0], [32.5, 612.0], [32.6, 612.0], [32.7, 612.0], [32.8, 612.0], [32.9, 612.0], [33.0, 612.0], [33.1, 612.0], [33.2, 612.0], [33.3, 612.0], [33.4, 614.0], [33.5, 614.0], [33.6, 614.0], [33.7, 614.0], [33.8, 614.0], [33.9, 614.0], [34.0, 614.0], [34.1, 614.0], [34.2, 614.0], [34.3, 614.0], [34.4, 614.0], [34.5, 614.0], [34.6, 618.0], [34.7, 618.0], [34.8, 618.0], [34.9, 618.0], [35.0, 618.0], [35.1, 618.0], [35.2, 618.0], [35.3, 618.0], [35.4, 618.0], [35.5, 618.0], [35.6, 618.0], [35.7, 618.0], [35.8, 618.0], [35.9, 628.0], [36.0, 628.0], [36.1, 628.0], [36.2, 628.0], [36.3, 628.0], [36.4, 628.0], [36.5, 628.0], [36.6, 628.0], [36.7, 628.0], [36.8, 628.0], [36.9, 628.0], [37.0, 628.0], [37.1, 633.0], [37.2, 633.0], [37.3, 633.0], [37.4, 633.0], [37.5, 633.0], [37.6, 633.0], [37.7, 633.0], [37.8, 633.0], [37.9, 633.0], [38.0, 633.0], [38.1, 633.0], [38.2, 633.0], [38.3, 640.0], [38.4, 640.0], [38.5, 640.0], [38.6, 640.0], [38.7, 640.0], [38.8, 640.0], [38.9, 640.0], [39.0, 640.0], [39.1, 640.0], [39.2, 640.0], [39.3, 640.0], [39.4, 640.0], [39.5, 640.0], [39.6, 786.0], [39.7, 786.0], [39.8, 786.0], [39.9, 786.0], [40.0, 786.0], [40.1, 786.0], [40.2, 786.0], [40.3, 786.0], [40.4, 786.0], [40.5, 786.0], [40.6, 786.0], [40.7, 786.0], [40.8, 798.0], [40.9, 798.0], [41.0, 798.0], [41.1, 798.0], [41.2, 798.0], [41.3, 798.0], [41.4, 798.0], [41.5, 798.0], [41.6, 798.0], [41.7, 798.0], [41.8, 798.0], [41.9, 798.0], [42.0, 811.0], [42.1, 811.0], [42.2, 811.0], [42.3, 811.0], [42.4, 811.0], [42.5, 811.0], [42.6, 811.0], [42.7, 811.0], [42.8, 811.0], [42.9, 811.0], [43.0, 811.0], [43.1, 811.0], [43.2, 811.0], [43.3, 839.0], [43.4, 839.0], [43.5, 839.0], [43.6, 839.0], [43.7, 839.0], [43.8, 839.0], [43.9, 839.0], [44.0, 839.0], [44.1, 839.0], [44.2, 839.0], [44.3, 839.0], [44.4, 839.0], [44.5, 840.0], [44.6, 840.0], [44.7, 840.0], [44.8, 840.0], [44.9, 840.0], [45.0, 840.0], [45.1, 840.0], [45.2, 840.0], [45.3, 840.0], [45.4, 840.0], [45.5, 840.0], [45.6, 840.0], [45.7, 845.0], [45.8, 845.0], [45.9, 845.0], [46.0, 845.0], [46.1, 845.0], [46.2, 845.0], [46.3, 845.0], [46.4, 845.0], [46.5, 845.0], [46.6, 845.0], [46.7, 845.0], [46.8, 845.0], [46.9, 845.0], [47.0, 848.0], [47.1, 848.0], [47.2, 848.0], [47.3, 848.0], [47.4, 848.0], [47.5, 848.0], [47.6, 848.0], [47.7, 848.0], [47.8, 848.0], [47.9, 848.0], [48.0, 848.0], [48.1, 848.0], [48.2, 849.0], [48.3, 849.0], [48.4, 849.0], [48.5, 849.0], [48.6, 849.0], [48.7, 849.0], [48.8, 849.0], [48.9, 849.0], [49.0, 849.0], [49.1, 849.0], [49.2, 849.0], [49.3, 849.0], [49.4, 851.0], [49.5, 851.0], [49.6, 851.0], [49.7, 851.0], [49.8, 851.0], [49.9, 851.0], [50.0, 851.0], [50.1, 851.0], [50.2, 851.0], [50.3, 851.0], [50.4, 851.0], [50.5, 851.0], [50.6, 851.0], [50.7, 856.0], [50.8, 856.0], [50.9, 856.0], [51.0, 856.0], [51.1, 856.0], [51.2, 856.0], [51.3, 856.0], [51.4, 856.0], [51.5, 856.0], [51.6, 856.0], [51.7, 856.0], [51.8, 856.0], [51.9, 860.0], [52.0, 860.0], [52.1, 860.0], [52.2, 860.0], [52.3, 860.0], [52.4, 860.0], [52.5, 860.0], [52.6, 860.0], [52.7, 860.0], [52.8, 860.0], [52.9, 860.0], [53.0, 860.0], [53.1, 864.0], [53.2, 864.0], [53.3, 864.0], [53.4, 864.0], [53.5, 864.0], [53.6, 864.0], [53.7, 864.0], [53.8, 864.0], [53.9, 864.0], [54.0, 864.0], [54.1, 864.0], [54.2, 864.0], [54.3, 864.0], [54.4, 881.0], [54.5, 881.0], [54.6, 881.0], [54.7, 881.0], [54.8, 881.0], [54.9, 881.0], [55.0, 881.0], [55.1, 881.0], [55.2, 881.0], [55.3, 881.0], [55.4, 881.0], [55.5, 881.0], [55.6, 884.0], [55.7, 884.0], [55.8, 884.0], [55.9, 884.0], [56.0, 884.0], [56.1, 884.0], [56.2, 884.0], [56.3, 884.0], [56.4, 884.0], [56.5, 884.0], [56.6, 884.0], [56.7, 884.0], [56.8, 884.0], [56.9, 884.0], [57.0, 884.0], [57.1, 884.0], [57.2, 884.0], [57.3, 884.0], [57.4, 884.0], [57.5, 884.0], [57.6, 884.0], [57.7, 884.0], [57.8, 884.0], [57.9, 884.0], [58.0, 884.0], [58.1, 887.0], [58.2, 887.0], [58.3, 887.0], [58.4, 887.0], [58.5, 887.0], [58.6, 887.0], [58.7, 887.0], [58.8, 887.0], [58.9, 887.0], [59.0, 887.0], [59.1, 887.0], [59.2, 887.0], [59.3, 898.0], [59.4, 898.0], [59.5, 898.0], [59.6, 898.0], [59.7, 898.0], [59.8, 898.0], [59.9, 898.0], [60.0, 898.0], [60.1, 898.0], [60.2, 898.0], [60.3, 898.0], [60.4, 898.0], [60.5, 904.0], [60.6, 904.0], [60.7, 904.0], [60.8, 904.0], [60.9, 904.0], [61.0, 904.0], [61.1, 904.0], [61.2, 904.0], [61.3, 904.0], [61.4, 904.0], [61.5, 904.0], [61.6, 904.0], [61.7, 904.0], [61.8, 905.0], [61.9, 905.0], [62.0, 905.0], [62.1, 905.0], [62.2, 905.0], [62.3, 905.0], [62.4, 905.0], [62.5, 905.0], [62.6, 905.0], [62.7, 905.0], [62.8, 905.0], [62.9, 905.0], [63.0, 906.0], [63.1, 906.0], [63.2, 906.0], [63.3, 906.0], [63.4, 906.0], [63.5, 906.0], [63.6, 906.0], [63.7, 906.0], [63.8, 906.0], [63.9, 906.0], [64.0, 906.0], [64.1, 906.0], [64.2, 920.0], [64.3, 920.0], [64.4, 920.0], [64.5, 920.0], [64.6, 920.0], [64.7, 920.0], [64.8, 920.0], [64.9, 920.0], [65.0, 920.0], [65.1, 920.0], [65.2, 920.0], [65.3, 920.0], [65.4, 920.0], [65.5, 1070.0], [65.6, 1070.0], [65.7, 1070.0], [65.8, 1070.0], [65.9, 1070.0], [66.0, 1070.0], [66.1, 1070.0], [66.2, 1070.0], [66.3, 1070.0], [66.4, 1070.0], [66.5, 1070.0], [66.6, 1070.0], [66.7, 1131.0], [66.8, 1131.0], [66.9, 1131.0], [67.0, 1131.0], [67.1, 1131.0], [67.2, 1131.0], [67.3, 1131.0], [67.4, 1131.0], [67.5, 1131.0], [67.6, 1131.0], [67.7, 1131.0], [67.8, 1131.0], [67.9, 1131.0], [68.0, 1140.0], [68.1, 1140.0], [68.2, 1140.0], [68.3, 1140.0], [68.4, 1140.0], [68.5, 1140.0], [68.6, 1140.0], [68.7, 1140.0], [68.8, 1140.0], [68.9, 1140.0], [69.0, 1140.0], [69.1, 1140.0], [69.2, 1168.0], [69.3, 1168.0], [69.4, 1168.0], [69.5, 1168.0], [69.6, 1168.0], [69.7, 1168.0], [69.8, 1168.0], [69.9, 1168.0], [70.0, 1168.0], [70.1, 1168.0], [70.2, 1168.0], [70.3, 1168.0], [70.4, 1191.0], [70.5, 1191.0], [70.6, 1191.0], [70.7, 1191.0], [70.8, 1191.0], [70.9, 1191.0], [71.0, 1191.0], [71.1, 1191.0], [71.2, 1191.0], [71.3, 1191.0], [71.4, 1191.0], [71.5, 1191.0], [71.6, 1191.0], [71.7, 1409.0], [71.8, 1409.0], [71.9, 1409.0], [72.0, 1409.0], [72.1, 1409.0], [72.2, 1409.0], [72.3, 1409.0], [72.4, 1409.0], [72.5, 1409.0], [72.6, 1409.0], [72.7, 1409.0], [72.8, 1409.0], [72.9, 1631.0], [73.0, 1631.0], [73.1, 1631.0], [73.2, 1631.0], [73.3, 1631.0], [73.4, 1631.0], [73.5, 1631.0], [73.6, 1631.0], [73.7, 1631.0], [73.8, 1631.0], [73.9, 1631.0], [74.0, 1631.0], [74.1, 1703.0], [74.2, 1703.0], [74.3, 1703.0], [74.4, 1703.0], [74.5, 1703.0], [74.6, 1703.0], [74.7, 1703.0], [74.8, 1703.0], [74.9, 1703.0], [75.0, 1703.0], [75.1, 1703.0], [75.2, 1703.0], [75.3, 1703.0], [75.4, 1787.0], [75.5, 1787.0], [75.6, 1787.0], [75.7, 1787.0], [75.8, 1787.0], [75.9, 1787.0], [76.0, 1787.0], [76.1, 1787.0], [76.2, 1787.0], [76.3, 1787.0], [76.4, 1787.0], [76.5, 1787.0], [76.6, 1873.0], [76.7, 1873.0], [76.8, 1873.0], [76.9, 1873.0], [77.0, 1873.0], [77.1, 1873.0], [77.2, 1873.0], [77.3, 1873.0], [77.4, 1873.0], [77.5, 1873.0], [77.6, 1873.0], [77.7, 1873.0], [77.8, 1968.0], [77.9, 1968.0], [78.0, 1968.0], [78.1, 1968.0], [78.2, 1968.0], [78.3, 1968.0], [78.4, 1968.0], [78.5, 1968.0], [78.6, 1968.0], [78.7, 1968.0], [78.8, 1968.0], [78.9, 1968.0], [79.0, 1968.0], [79.1, 2140.0], [79.2, 2140.0], [79.3, 2140.0], [79.4, 2140.0], [79.5, 2140.0], [79.6, 2140.0], [79.7, 2140.0], [79.8, 2140.0], [79.9, 2140.0], [80.0, 2140.0], [80.1, 2140.0], [80.2, 2140.0], [80.3, 2281.0], [80.4, 2281.0], [80.5, 2281.0], [80.6, 2281.0], [80.7, 2281.0], [80.8, 2281.0], [80.9, 2281.0], [81.0, 2281.0], [81.1, 2281.0], [81.2, 2281.0], [81.3, 2281.0], [81.4, 2281.0], [81.5, 2366.0], [81.6, 2366.0], [81.7, 2366.0], [81.8, 2366.0], [81.9, 2366.0], [82.0, 2366.0], [82.1, 2366.0], [82.2, 2366.0], [82.3, 2366.0], [82.4, 2366.0], [82.5, 2366.0], [82.6, 2366.0], [82.7, 2366.0], [82.8, 2541.0], [82.9, 2541.0], [83.0, 2541.0], [83.1, 2541.0], [83.2, 2541.0], [83.3, 2541.0], [83.4, 2541.0], [83.5, 2541.0], [83.6, 2541.0], [83.7, 2541.0], [83.8, 2541.0], [83.9, 2541.0], [84.0, 2558.0], [84.1, 2558.0], [84.2, 2558.0], [84.3, 2558.0], [84.4, 2558.0], [84.5, 2558.0], [84.6, 2558.0], [84.7, 2558.0], [84.8, 2558.0], [84.9, 2558.0], [85.0, 2558.0], [85.1, 2558.0], [85.2, 2619.0], [85.3, 2619.0], [85.4, 2619.0], [85.5, 2619.0], [85.6, 2619.0], [85.7, 2619.0], [85.8, 2619.0], [85.9, 2619.0], [86.0, 2619.0], [86.1, 2619.0], [86.2, 2619.0], [86.3, 2619.0], [86.4, 2619.0], [86.5, 2650.0], [86.6, 2650.0], [86.7, 2650.0], [86.8, 2650.0], [86.9, 2650.0], [87.0, 2650.0], [87.1, 2650.0], [87.2, 2650.0], [87.3, 2650.0], [87.4, 2650.0], [87.5, 2650.0], [87.6, 2650.0], [87.7, 2722.0], [87.8, 2722.0], [87.9, 2722.0], [88.0, 2722.0], [88.1, 2722.0], [88.2, 2722.0], [88.3, 2722.0], [88.4, 2722.0], [88.5, 2722.0], [88.6, 2722.0], [88.7, 2722.0], [88.8, 2722.0], [88.9, 2858.0], [89.0, 2858.0], [89.1, 2858.0], [89.2, 2858.0], [89.3, 2858.0], [89.4, 2858.0], [89.5, 2858.0], [89.6, 2858.0], [89.7, 2858.0], [89.8, 2858.0], [89.9, 2858.0], [90.0, 2858.0], [90.1, 2858.0], [90.2, 3111.0], [90.3, 3111.0], [90.4, 3111.0], [90.5, 3111.0], [90.6, 3111.0], [90.7, 3111.0], [90.8, 3111.0], [90.9, 3111.0], [91.0, 3111.0], [91.1, 3111.0], [91.2, 3111.0], [91.3, 3111.0], [91.4, 3125.0], [91.5, 3125.0], [91.6, 3125.0], [91.7, 3125.0], [91.8, 3125.0], [91.9, 3125.0], [92.0, 3125.0], [92.1, 3125.0], [92.2, 3125.0], [92.3, 3125.0], [92.4, 3125.0], [92.5, 3125.0], [92.6, 3135.0], [92.7, 3135.0], [92.8, 3135.0], [92.9, 3135.0], [93.0, 3135.0], [93.1, 3135.0], [93.2, 3135.0], [93.3, 3135.0], [93.4, 3135.0], [93.5, 3135.0], [93.6, 3135.0], [93.7, 3135.0], [93.8, 3135.0], [93.9, 3140.0], [94.0, 3140.0], [94.1, 3140.0], [94.2, 3140.0], [94.3, 3140.0], [94.4, 3140.0], [94.5, 3140.0], [94.6, 3140.0], [94.7, 3140.0], [94.8, 3140.0], [94.9, 3140.0], [95.0, 3140.0], [95.1, 3357.0], [95.2, 3357.0], [95.3, 3357.0], [95.4, 3357.0], [95.5, 3357.0], [95.6, 3357.0], [95.7, 3357.0], [95.8, 3357.0], [95.9, 3357.0], [96.0, 3357.0], [96.1, 3357.0], [96.2, 3357.0], [96.3, 5433.0], [96.4, 5433.0], [96.5, 5433.0], [96.6, 5433.0], [96.7, 5433.0], [96.8, 5433.0], [96.9, 5433.0], [97.0, 5433.0], [97.1, 5433.0], [97.2, 5433.0], [97.3, 5433.0], [97.4, 5433.0], [97.5, 5433.0], [97.6, 5713.0], [97.7, 5713.0], [97.8, 5713.0], [97.9, 5713.0], [98.0, 5713.0], [98.1, 5713.0], [98.2, 5713.0], [98.3, 5713.0], [98.4, 5713.0], [98.5, 5713.0], [98.6, 5713.0], [98.7, 5713.0], [98.8, 8259.0], [98.9, 8259.0], [99.0, 8259.0], [99.1, 8259.0], [99.2, 8259.0], [99.3, 8259.0], [99.4, 8259.0], [99.5, 8259.0], [99.6, 8259.0], [99.7, 8259.0], [99.8, 8259.0], [99.9, 8259.0], [100.0, 8259.0]], "isOverall": false, "label": "https://www.echotex.com/new-index-1", "isController": false}, {"data": [[0.0, 1600.0], [0.1, 1600.0], [0.2, 1600.0], [0.3, 1600.0], [0.4, 1600.0], [0.5, 1600.0], [0.6, 1600.0], [0.7, 1600.0], [0.8, 1600.0], [0.9, 1600.0], [1.0, 1600.0], [1.1, 1600.0], [1.2, 1600.0], [1.3, 1601.0], [1.4, 1601.0], [1.5, 1601.0], [1.6, 1601.0], [1.7, 1601.0], [1.8, 1601.0], [1.9, 1601.0], [2.0, 1601.0], [2.1, 1601.0], [2.2, 1601.0], [2.3, 1601.0], [2.4, 1601.0], [2.5, 1621.0], [2.6, 1621.0], [2.7, 1621.0], [2.8, 1621.0], [2.9, 1621.0], [3.0, 1621.0], [3.1, 1621.0], [3.2, 1621.0], [3.3, 1621.0], [3.4, 1621.0], [3.5, 1621.0], [3.6, 1621.0], [3.7, 1621.0], [3.8, 1622.0], [3.9, 1622.0], [4.0, 1622.0], [4.1, 1622.0], [4.2, 1622.0], [4.3, 1622.0], [4.4, 1622.0], [4.5, 1622.0], [4.6, 1622.0], [4.7, 1622.0], [4.8, 1622.0], [4.9, 1622.0], [5.0, 1623.0], [5.1, 1623.0], [5.2, 1623.0], [5.3, 1623.0], [5.4, 1623.0], [5.5, 1623.0], [5.6, 1623.0], [5.7, 1623.0], [5.8, 1623.0], [5.9, 1623.0], [6.0, 1623.0], [6.1, 1623.0], [6.2, 1635.0], [6.3, 1635.0], [6.4, 1635.0], [6.5, 1635.0], [6.6, 1635.0], [6.7, 1635.0], [6.8, 1635.0], [6.9, 1635.0], [7.0, 1635.0], [7.1, 1635.0], [7.2, 1635.0], [7.3, 1635.0], [7.4, 1635.0], [7.5, 1645.0], [7.6, 1645.0], [7.7, 1645.0], [7.8, 1645.0], [7.9, 1645.0], [8.0, 1645.0], [8.1, 1645.0], [8.2, 1645.0], [8.3, 1645.0], [8.4, 1645.0], [8.5, 1645.0], [8.6, 1645.0], [8.7, 1649.0], [8.8, 1649.0], [8.9, 1649.0], [9.0, 1649.0], [9.1, 1649.0], [9.2, 1649.0], [9.3, 1649.0], [9.4, 1649.0], [9.5, 1649.0], [9.6, 1649.0], [9.7, 1649.0], [9.8, 1649.0], [9.9, 1649.0], [10.0, 1649.0], [10.1, 1649.0], [10.2, 1649.0], [10.3, 1649.0], [10.4, 1649.0], [10.5, 1649.0], [10.6, 1649.0], [10.7, 1649.0], [10.8, 1649.0], [10.9, 1649.0], [11.0, 1649.0], [11.1, 1649.0], [11.2, 1649.0], [11.3, 1649.0], [11.4, 1649.0], [11.5, 1649.0], [11.6, 1649.0], [11.7, 1649.0], [11.8, 1649.0], [11.9, 1649.0], [12.0, 1649.0], [12.1, 1649.0], [12.2, 1649.0], [12.3, 1649.0], [12.4, 1660.0], [12.5, 1660.0], [12.6, 1660.0], [12.7, 1660.0], [12.8, 1660.0], [12.9, 1660.0], [13.0, 1660.0], [13.1, 1660.0], [13.2, 1660.0], [13.3, 1660.0], [13.4, 1660.0], [13.5, 1660.0], [13.6, 1663.0], [13.7, 1663.0], [13.8, 1663.0], [13.9, 1663.0], [14.0, 1663.0], [14.1, 1663.0], [14.2, 1663.0], [14.3, 1663.0], [14.4, 1663.0], [14.5, 1663.0], [14.6, 1663.0], [14.7, 1663.0], [14.8, 1663.0], [14.9, 1664.0], [15.0, 1664.0], [15.1, 1664.0], [15.2, 1664.0], [15.3, 1664.0], [15.4, 1664.0], [15.5, 1664.0], [15.6, 1664.0], [15.7, 1664.0], [15.8, 1664.0], [15.9, 1664.0], [16.0, 1664.0], [16.1, 1665.0], [16.2, 1665.0], [16.3, 1665.0], [16.4, 1665.0], [16.5, 1665.0], [16.6, 1665.0], [16.7, 1665.0], [16.8, 1665.0], [16.9, 1665.0], [17.0, 1665.0], [17.1, 1665.0], [17.2, 1665.0], [17.3, 1668.0], [17.4, 1668.0], [17.5, 1668.0], [17.6, 1668.0], [17.7, 1668.0], [17.8, 1668.0], [17.9, 1668.0], [18.0, 1668.0], [18.1, 1668.0], [18.2, 1668.0], [18.3, 1668.0], [18.4, 1668.0], [18.5, 1668.0], [18.6, 1669.0], [18.7, 1669.0], [18.8, 1669.0], [18.9, 1669.0], [19.0, 1669.0], [19.1, 1669.0], [19.2, 1669.0], [19.3, 1669.0], [19.4, 1669.0], [19.5, 1669.0], [19.6, 1669.0], [19.7, 1669.0], [19.8, 1677.0], [19.9, 1677.0], [20.0, 1677.0], [20.1, 1677.0], [20.2, 1677.0], [20.3, 1677.0], [20.4, 1677.0], [20.5, 1677.0], [20.6, 1677.0], [20.7, 1677.0], [20.8, 1677.0], [20.9, 1677.0], [21.0, 1689.0], [21.1, 1689.0], [21.2, 1689.0], [21.3, 1689.0], [21.4, 1689.0], [21.5, 1689.0], [21.6, 1689.0], [21.7, 1689.0], [21.8, 1689.0], [21.9, 1689.0], [22.0, 1689.0], [22.1, 1689.0], [22.2, 1689.0], [22.3, 1693.0], [22.4, 1693.0], [22.5, 1693.0], [22.6, 1693.0], [22.7, 1693.0], [22.8, 1693.0], [22.9, 1693.0], [23.0, 1693.0], [23.1, 1693.0], [23.2, 1693.0], [23.3, 1693.0], [23.4, 1693.0], [23.5, 1696.0], [23.6, 1696.0], [23.7, 1696.0], [23.8, 1696.0], [23.9, 1696.0], [24.0, 1696.0], [24.1, 1696.0], [24.2, 1696.0], [24.3, 1696.0], [24.4, 1696.0], [24.5, 1696.0], [24.6, 1696.0], [24.7, 1696.0], [24.8, 1696.0], [24.9, 1696.0], [25.0, 1696.0], [25.1, 1696.0], [25.2, 1696.0], [25.3, 1696.0], [25.4, 1696.0], [25.5, 1696.0], [25.6, 1696.0], [25.7, 1696.0], [25.8, 1696.0], [25.9, 1696.0], [26.0, 1700.0], [26.1, 1700.0], [26.2, 1700.0], [26.3, 1700.0], [26.4, 1700.0], [26.5, 1700.0], [26.6, 1700.0], [26.7, 1700.0], [26.8, 1700.0], [26.9, 1700.0], [27.0, 1700.0], [27.1, 1700.0], [27.2, 1702.0], [27.3, 1702.0], [27.4, 1702.0], [27.5, 1702.0], [27.6, 1702.0], [27.7, 1702.0], [27.8, 1702.0], [27.9, 1702.0], [28.0, 1702.0], [28.1, 1702.0], [28.2, 1702.0], [28.3, 1702.0], [28.4, 1702.0], [28.5, 1702.0], [28.6, 1702.0], [28.7, 1702.0], [28.8, 1702.0], [28.9, 1702.0], [29.0, 1702.0], [29.1, 1702.0], [29.2, 1702.0], [29.3, 1702.0], [29.4, 1702.0], [29.5, 1702.0], [29.6, 1702.0], [29.7, 1703.0], [29.8, 1703.0], [29.9, 1703.0], [30.0, 1703.0], [30.1, 1703.0], [30.2, 1703.0], [30.3, 1703.0], [30.4, 1703.0], [30.5, 1703.0], [30.6, 1703.0], [30.7, 1703.0], [30.8, 1703.0], [30.9, 1703.0], [31.0, 1703.0], [31.1, 1703.0], [31.2, 1703.0], [31.3, 1703.0], [31.4, 1703.0], [31.5, 1703.0], [31.6, 1703.0], [31.7, 1703.0], [31.8, 1703.0], [31.9, 1703.0], [32.0, 1703.0], [32.1, 1704.0], [32.2, 1704.0], [32.3, 1704.0], [32.4, 1704.0], [32.5, 1704.0], [32.6, 1704.0], [32.7, 1704.0], [32.8, 1704.0], [32.9, 1704.0], [33.0, 1704.0], [33.1, 1704.0], [33.2, 1704.0], [33.3, 1704.0], [33.4, 1709.0], [33.5, 1709.0], [33.6, 1709.0], [33.7, 1709.0], [33.8, 1709.0], [33.9, 1709.0], [34.0, 1709.0], [34.1, 1709.0], [34.2, 1709.0], [34.3, 1709.0], [34.4, 1709.0], [34.5, 1709.0], [34.6, 1710.0], [34.7, 1710.0], [34.8, 1710.0], [34.9, 1710.0], [35.0, 1710.0], [35.1, 1710.0], [35.2, 1710.0], [35.3, 1710.0], [35.4, 1710.0], [35.5, 1710.0], [35.6, 1710.0], [35.7, 1710.0], [35.8, 1710.0], [35.9, 1711.0], [36.0, 1711.0], [36.1, 1711.0], [36.2, 1711.0], [36.3, 1711.0], [36.4, 1711.0], [36.5, 1711.0], [36.6, 1711.0], [36.7, 1711.0], [36.8, 1711.0], [36.9, 1711.0], [37.0, 1711.0], [37.1, 1716.0], [37.2, 1716.0], [37.3, 1716.0], [37.4, 1716.0], [37.5, 1716.0], [37.6, 1716.0], [37.7, 1716.0], [37.8, 1716.0], [37.9, 1716.0], [38.0, 1716.0], [38.1, 1716.0], [38.2, 1716.0], [38.3, 1717.0], [38.4, 1717.0], [38.5, 1717.0], [38.6, 1717.0], [38.7, 1717.0], [38.8, 1717.0], [38.9, 1717.0], [39.0, 1717.0], [39.1, 1717.0], [39.2, 1717.0], [39.3, 1717.0], [39.4, 1717.0], [39.5, 1717.0], [39.6, 1717.0], [39.7, 1717.0], [39.8, 1717.0], [39.9, 1717.0], [40.0, 1717.0], [40.1, 1717.0], [40.2, 1717.0], [40.3, 1717.0], [40.4, 1717.0], [40.5, 1717.0], [40.6, 1717.0], [40.7, 1717.0], [40.8, 1718.0], [40.9, 1718.0], [41.0, 1718.0], [41.1, 1718.0], [41.2, 1718.0], [41.3, 1718.0], [41.4, 1718.0], [41.5, 1718.0], [41.6, 1718.0], [41.7, 1718.0], [41.8, 1718.0], [41.9, 1718.0], [42.0, 1725.0], [42.1, 1725.0], [42.2, 1725.0], [42.3, 1725.0], [42.4, 1725.0], [42.5, 1725.0], [42.6, 1725.0], [42.7, 1725.0], [42.8, 1725.0], [42.9, 1725.0], [43.0, 1725.0], [43.1, 1725.0], [43.2, 1725.0], [43.3, 1725.0], [43.4, 1725.0], [43.5, 1725.0], [43.6, 1725.0], [43.7, 1725.0], [43.8, 1725.0], [43.9, 1725.0], [44.0, 1725.0], [44.1, 1725.0], [44.2, 1725.0], [44.3, 1725.0], [44.4, 1725.0], [44.5, 1726.0], [44.6, 1726.0], [44.7, 1726.0], [44.8, 1726.0], [44.9, 1726.0], [45.0, 1726.0], [45.1, 1726.0], [45.2, 1726.0], [45.3, 1726.0], [45.4, 1726.0], [45.5, 1726.0], [45.6, 1726.0], [45.7, 1727.0], [45.8, 1727.0], [45.9, 1727.0], [46.0, 1727.0], [46.1, 1727.0], [46.2, 1727.0], [46.3, 1727.0], [46.4, 1727.0], [46.5, 1727.0], [46.6, 1727.0], [46.7, 1727.0], [46.8, 1727.0], [46.9, 1727.0], [47.0, 1728.0], [47.1, 1728.0], [47.2, 1728.0], [47.3, 1728.0], [47.4, 1728.0], [47.5, 1728.0], [47.6, 1728.0], [47.7, 1728.0], [47.8, 1728.0], [47.9, 1728.0], [48.0, 1728.0], [48.1, 1728.0], [48.2, 1732.0], [48.3, 1732.0], [48.4, 1732.0], [48.5, 1732.0], [48.6, 1732.0], [48.7, 1732.0], [48.8, 1732.0], [48.9, 1732.0], [49.0, 1732.0], [49.1, 1732.0], [49.2, 1732.0], [49.3, 1732.0], [49.4, 1733.0], [49.5, 1733.0], [49.6, 1733.0], [49.7, 1733.0], [49.8, 1733.0], [49.9, 1733.0], [50.0, 1733.0], [50.1, 1733.0], [50.2, 1733.0], [50.3, 1733.0], [50.4, 1733.0], [50.5, 1733.0], [50.6, 1733.0], [50.7, 1734.0], [50.8, 1734.0], [50.9, 1734.0], [51.0, 1734.0], [51.1, 1734.0], [51.2, 1734.0], [51.3, 1734.0], [51.4, 1734.0], [51.5, 1734.0], [51.6, 1734.0], [51.7, 1734.0], [51.8, 1734.0], [51.9, 1737.0], [52.0, 1737.0], [52.1, 1737.0], [52.2, 1737.0], [52.3, 1737.0], [52.4, 1737.0], [52.5, 1737.0], [52.6, 1737.0], [52.7, 1737.0], [52.8, 1737.0], [52.9, 1737.0], [53.0, 1737.0], [53.1, 1738.0], [53.2, 1738.0], [53.3, 1738.0], [53.4, 1738.0], [53.5, 1738.0], [53.6, 1738.0], [53.7, 1738.0], [53.8, 1738.0], [53.9, 1738.0], [54.0, 1738.0], [54.1, 1738.0], [54.2, 1738.0], [54.3, 1738.0], [54.4, 1741.0], [54.5, 1741.0], [54.6, 1741.0], [54.7, 1741.0], [54.8, 1741.0], [54.9, 1741.0], [55.0, 1741.0], [55.1, 1741.0], [55.2, 1741.0], [55.3, 1741.0], [55.4, 1741.0], [55.5, 1741.0], [55.6, 1743.0], [55.7, 1743.0], [55.8, 1743.0], [55.9, 1743.0], [56.0, 1743.0], [56.1, 1743.0], [56.2, 1743.0], [56.3, 1743.0], [56.4, 1743.0], [56.5, 1743.0], [56.6, 1743.0], [56.7, 1743.0], [56.8, 1745.0], [56.9, 1745.0], [57.0, 1745.0], [57.1, 1745.0], [57.2, 1745.0], [57.3, 1745.0], [57.4, 1745.0], [57.5, 1745.0], [57.6, 1745.0], [57.7, 1745.0], [57.8, 1745.0], [57.9, 1745.0], [58.0, 1745.0], [58.1, 1745.0], [58.2, 1745.0], [58.3, 1745.0], [58.4, 1745.0], [58.5, 1745.0], [58.6, 1745.0], [58.7, 1745.0], [58.8, 1745.0], [58.9, 1745.0], [59.0, 1745.0], [59.1, 1745.0], [59.2, 1745.0], [59.3, 1747.0], [59.4, 1747.0], [59.5, 1747.0], [59.6, 1747.0], [59.7, 1747.0], [59.8, 1747.0], [59.9, 1747.0], [60.0, 1747.0], [60.1, 1747.0], [60.2, 1747.0], [60.3, 1747.0], [60.4, 1747.0], [60.5, 1751.0], [60.6, 1751.0], [60.7, 1751.0], [60.8, 1751.0], [60.9, 1751.0], [61.0, 1751.0], [61.1, 1751.0], [61.2, 1751.0], [61.3, 1751.0], [61.4, 1751.0], [61.5, 1751.0], [61.6, 1751.0], [61.7, 1751.0], [61.8, 1751.0], [61.9, 1751.0], [62.0, 1751.0], [62.1, 1751.0], [62.2, 1751.0], [62.3, 1751.0], [62.4, 1751.0], [62.5, 1751.0], [62.6, 1751.0], [62.7, 1751.0], [62.8, 1751.0], [62.9, 1751.0], [63.0, 1752.0], [63.1, 1752.0], [63.2, 1752.0], [63.3, 1752.0], [63.4, 1752.0], [63.5, 1752.0], [63.6, 1752.0], [63.7, 1752.0], [63.8, 1752.0], [63.9, 1752.0], [64.0, 1752.0], [64.1, 1752.0], [64.2, 1754.0], [64.3, 1754.0], [64.4, 1754.0], [64.5, 1754.0], [64.6, 1754.0], [64.7, 1754.0], [64.8, 1754.0], [64.9, 1754.0], [65.0, 1754.0], [65.1, 1754.0], [65.2, 1754.0], [65.3, 1754.0], [65.4, 1754.0], [65.5, 1756.0], [65.6, 1756.0], [65.7, 1756.0], [65.8, 1756.0], [65.9, 1756.0], [66.0, 1756.0], [66.1, 1756.0], [66.2, 1756.0], [66.3, 1756.0], [66.4, 1756.0], [66.5, 1756.0], [66.6, 1756.0], [66.7, 1764.0], [66.8, 1764.0], [66.9, 1764.0], [67.0, 1764.0], [67.1, 1764.0], [67.2, 1764.0], [67.3, 1764.0], [67.4, 1764.0], [67.5, 1764.0], [67.6, 1764.0], [67.7, 1764.0], [67.8, 1764.0], [67.9, 1764.0], [68.0, 1765.0], [68.1, 1765.0], [68.2, 1765.0], [68.3, 1765.0], [68.4, 1765.0], [68.5, 1765.0], [68.6, 1765.0], [68.7, 1765.0], [68.8, 1765.0], [68.9, 1765.0], [69.0, 1765.0], [69.1, 1765.0], [69.2, 1770.0], [69.3, 1770.0], [69.4, 1770.0], [69.5, 1770.0], [69.6, 1770.0], [69.7, 1770.0], [69.8, 1770.0], [69.9, 1770.0], [70.0, 1770.0], [70.1, 1770.0], [70.2, 1770.0], [70.3, 1770.0], [70.4, 1772.0], [70.5, 1772.0], [70.6, 1772.0], [70.7, 1772.0], [70.8, 1772.0], [70.9, 1772.0], [71.0, 1772.0], [71.1, 1772.0], [71.2, 1772.0], [71.3, 1772.0], [71.4, 1772.0], [71.5, 1772.0], [71.6, 1772.0], [71.7, 1783.0], [71.8, 1783.0], [71.9, 1783.0], [72.0, 1783.0], [72.1, 1783.0], [72.2, 1783.0], [72.3, 1783.0], [72.4, 1783.0], [72.5, 1783.0], [72.6, 1783.0], [72.7, 1783.0], [72.8, 1783.0], [72.9, 1798.0], [73.0, 1798.0], [73.1, 1798.0], [73.2, 1798.0], [73.3, 1798.0], [73.4, 1798.0], [73.5, 1798.0], [73.6, 1798.0], [73.7, 1798.0], [73.8, 1798.0], [73.9, 1798.0], [74.0, 1798.0], [74.1, 1799.0], [74.2, 1799.0], [74.3, 1799.0], [74.4, 1799.0], [74.5, 1799.0], [74.6, 1799.0], [74.7, 1799.0], [74.8, 1799.0], [74.9, 1799.0], [75.0, 1799.0], [75.1, 1799.0], [75.2, 1799.0], [75.3, 1799.0], [75.4, 1801.0], [75.5, 1801.0], [75.6, 1801.0], [75.7, 1801.0], [75.8, 1801.0], [75.9, 1801.0], [76.0, 1801.0], [76.1, 1801.0], [76.2, 1801.0], [76.3, 1801.0], [76.4, 1801.0], [76.5, 1801.0], [76.6, 1813.0], [76.7, 1813.0], [76.8, 1813.0], [76.9, 1813.0], [77.0, 1813.0], [77.1, 1813.0], [77.2, 1813.0], [77.3, 1813.0], [77.4, 1813.0], [77.5, 1813.0], [77.6, 1813.0], [77.7, 1813.0], [77.8, 1824.0], [77.9, 1824.0], [78.0, 1824.0], [78.1, 1824.0], [78.2, 1824.0], [78.3, 1824.0], [78.4, 1824.0], [78.5, 1824.0], [78.6, 1824.0], [78.7, 1824.0], [78.8, 1824.0], [78.9, 1824.0], [79.0, 1824.0], [79.1, 1831.0], [79.2, 1831.0], [79.3, 1831.0], [79.4, 1831.0], [79.5, 1831.0], [79.6, 1831.0], [79.7, 1831.0], [79.8, 1831.0], [79.9, 1831.0], [80.0, 1831.0], [80.1, 1831.0], [80.2, 1831.0], [80.3, 1834.0], [80.4, 1834.0], [80.5, 1834.0], [80.6, 1834.0], [80.7, 1834.0], [80.8, 1834.0], [80.9, 1834.0], [81.0, 1834.0], [81.1, 1834.0], [81.2, 1834.0], [81.3, 1834.0], [81.4, 1834.0], [81.5, 1943.0], [81.6, 1943.0], [81.7, 1943.0], [81.8, 1943.0], [81.9, 1943.0], [82.0, 1943.0], [82.1, 1943.0], [82.2, 1943.0], [82.3, 1943.0], [82.4, 1943.0], [82.5, 1943.0], [82.6, 1943.0], [82.7, 1943.0], [82.8, 1946.0], [82.9, 1946.0], [83.0, 1946.0], [83.1, 1946.0], [83.2, 1946.0], [83.3, 1946.0], [83.4, 1946.0], [83.5, 1946.0], [83.6, 1946.0], [83.7, 1946.0], [83.8, 1946.0], [83.9, 1946.0], [84.0, 1965.0], [84.1, 1965.0], [84.2, 1965.0], [84.3, 1965.0], [84.4, 1965.0], [84.5, 1965.0], [84.6, 1965.0], [84.7, 1965.0], [84.8, 1965.0], [84.9, 1965.0], [85.0, 1965.0], [85.1, 1965.0], [85.2, 2062.0], [85.3, 2062.0], [85.4, 2062.0], [85.5, 2062.0], [85.6, 2062.0], [85.7, 2062.0], [85.8, 2062.0], [85.9, 2062.0], [86.0, 2062.0], [86.1, 2062.0], [86.2, 2062.0], [86.3, 2062.0], [86.4, 2062.0], [86.5, 2206.0], [86.6, 2206.0], [86.7, 2206.0], [86.8, 2206.0], [86.9, 2206.0], [87.0, 2206.0], [87.1, 2206.0], [87.2, 2206.0], [87.3, 2206.0], [87.4, 2206.0], [87.5, 2206.0], [87.6, 2206.0], [87.7, 2274.0], [87.8, 2274.0], [87.9, 2274.0], [88.0, 2274.0], [88.1, 2274.0], [88.2, 2274.0], [88.3, 2274.0], [88.4, 2274.0], [88.5, 2274.0], [88.6, 2274.0], [88.7, 2274.0], [88.8, 2274.0], [88.9, 2383.0], [89.0, 2383.0], [89.1, 2383.0], [89.2, 2383.0], [89.3, 2383.0], [89.4, 2383.0], [89.5, 2383.0], [89.6, 2383.0], [89.7, 2383.0], [89.8, 2383.0], [89.9, 2383.0], [90.0, 2383.0], [90.1, 2383.0], [90.2, 2561.0], [90.3, 2561.0], [90.4, 2561.0], [90.5, 2561.0], [90.6, 2561.0], [90.7, 2561.0], [90.8, 2561.0], [90.9, 2561.0], [91.0, 2561.0], [91.1, 2561.0], [91.2, 2561.0], [91.3, 2561.0], [91.4, 2594.0], [91.5, 2594.0], [91.6, 2594.0], [91.7, 2594.0], [91.8, 2594.0], [91.9, 2594.0], [92.0, 2594.0], [92.1, 2594.0], [92.2, 2594.0], [92.3, 2594.0], [92.4, 2594.0], [92.5, 2594.0], [92.6, 2632.0], [92.7, 2632.0], [92.8, 2632.0], [92.9, 2632.0], [93.0, 2632.0], [93.1, 2632.0], [93.2, 2632.0], [93.3, 2632.0], [93.4, 2632.0], [93.5, 2632.0], [93.6, 2632.0], [93.7, 2632.0], [93.8, 2632.0], [93.9, 2753.0], [94.0, 2753.0], [94.1, 2753.0], [94.2, 2753.0], [94.3, 2753.0], [94.4, 2753.0], [94.5, 2753.0], [94.6, 2753.0], [94.7, 2753.0], [94.8, 2753.0], [94.9, 2753.0], [95.0, 2753.0], [95.1, 3385.0], [95.2, 3385.0], [95.3, 3385.0], [95.4, 3385.0], [95.5, 3385.0], [95.6, 3385.0], [95.7, 3385.0], [95.8, 3385.0], [95.9, 3385.0], [96.0, 3385.0], [96.1, 3385.0], [96.2, 3385.0], [96.3, 3529.0], [96.4, 3529.0], [96.5, 3529.0], [96.6, 3529.0], [96.7, 3529.0], [96.8, 3529.0], [96.9, 3529.0], [97.0, 3529.0], [97.1, 3529.0], [97.2, 3529.0], [97.3, 3529.0], [97.4, 3529.0], [97.5, 3529.0], [97.6, 3596.0], [97.7, 3596.0], [97.8, 3596.0], [97.9, 3596.0], [98.0, 3596.0], [98.1, 3596.0], [98.2, 3596.0], [98.3, 3596.0], [98.4, 3596.0], [98.5, 3596.0], [98.6, 3596.0], [98.7, 3596.0], [98.8, 4420.0], [98.9, 4420.0], [99.0, 4420.0], [99.1, 4420.0], [99.2, 4420.0], [99.3, 4420.0], [99.4, 4420.0], [99.5, 4420.0], [99.6, 4420.0], [99.7, 4420.0], [99.8, 4420.0], [99.9, 4420.0], [100.0, 4420.0]], "isOverall": false, "label": "https://www.echotex.com/", "isController": false}, {"data": [[0.0, 268.0], [0.1, 268.0], [0.2, 268.0], [0.3, 268.0], [0.4, 268.0], [0.5, 268.0], [0.6, 268.0], [0.7, 268.0], [0.8, 268.0], [0.9, 268.0], [1.0, 268.0], [1.1, 268.0], [1.2, 268.0], [1.3, 268.0], [1.4, 268.0], [1.5, 268.0], [1.6, 268.0], [1.7, 268.0], [1.8, 268.0], [1.9, 268.0], [2.0, 268.0], [2.1, 268.0], [2.2, 268.0], [2.3, 268.0], [2.4, 268.0], [2.5, 276.0], [2.6, 276.0], [2.7, 276.0], [2.8, 276.0], [2.9, 276.0], [3.0, 276.0], [3.1, 276.0], [3.2, 276.0], [3.3, 276.0], [3.4, 276.0], [3.5, 276.0], [3.6, 276.0], [3.7, 276.0], [3.8, 277.0], [3.9, 277.0], [4.0, 277.0], [4.1, 277.0], [4.2, 277.0], [4.3, 277.0], [4.4, 277.0], [4.5, 277.0], [4.6, 277.0], [4.7, 277.0], [4.8, 277.0], [4.9, 277.0], [5.0, 281.0], [5.1, 281.0], [5.2, 281.0], [5.3, 281.0], [5.4, 281.0], [5.5, 281.0], [5.6, 281.0], [5.7, 281.0], [5.8, 281.0], [5.9, 281.0], [6.0, 281.0], [6.1, 281.0], [6.2, 282.0], [6.3, 282.0], [6.4, 282.0], [6.5, 282.0], [6.6, 282.0], [6.7, 282.0], [6.8, 282.0], [6.9, 282.0], [7.0, 282.0], [7.1, 282.0], [7.2, 282.0], [7.3, 282.0], [7.4, 282.0], [7.5, 283.0], [7.6, 283.0], [7.7, 283.0], [7.8, 283.0], [7.9, 283.0], [8.0, 283.0], [8.1, 283.0], [8.2, 283.0], [8.3, 283.0], [8.4, 283.0], [8.5, 283.0], [8.6, 283.0], [8.7, 283.0], [8.8, 283.0], [8.9, 283.0], [9.0, 283.0], [9.1, 283.0], [9.2, 283.0], [9.3, 283.0], [9.4, 283.0], [9.5, 283.0], [9.6, 283.0], [9.7, 283.0], [9.8, 283.0], [9.9, 284.0], [10.0, 284.0], [10.1, 284.0], [10.2, 284.0], [10.3, 284.0], [10.4, 284.0], [10.5, 284.0], [10.6, 284.0], [10.7, 284.0], [10.8, 284.0], [10.9, 284.0], [11.0, 284.0], [11.1, 284.0], [11.2, 285.0], [11.3, 285.0], [11.4, 285.0], [11.5, 285.0], [11.6, 285.0], [11.7, 285.0], [11.8, 285.0], [11.9, 285.0], [12.0, 285.0], [12.1, 285.0], [12.2, 285.0], [12.3, 285.0], [12.4, 285.0], [12.5, 285.0], [12.6, 285.0], [12.7, 285.0], [12.8, 285.0], [12.9, 285.0], [13.0, 285.0], [13.1, 285.0], [13.2, 285.0], [13.3, 285.0], [13.4, 285.0], [13.5, 285.0], [13.6, 287.0], [13.7, 287.0], [13.8, 287.0], [13.9, 287.0], [14.0, 287.0], [14.1, 287.0], [14.2, 287.0], [14.3, 287.0], [14.4, 287.0], [14.5, 287.0], [14.6, 287.0], [14.7, 287.0], [14.8, 287.0], [14.9, 289.0], [15.0, 289.0], [15.1, 289.0], [15.2, 289.0], [15.3, 289.0], [15.4, 289.0], [15.5, 289.0], [15.6, 289.0], [15.7, 289.0], [15.8, 289.0], [15.9, 289.0], [16.0, 289.0], [16.1, 290.0], [16.2, 290.0], [16.3, 290.0], [16.4, 290.0], [16.5, 290.0], [16.6, 290.0], [16.7, 290.0], [16.8, 290.0], [16.9, 290.0], [17.0, 290.0], [17.1, 290.0], [17.2, 290.0], [17.3, 290.0], [17.4, 290.0], [17.5, 290.0], [17.6, 290.0], [17.7, 290.0], [17.8, 290.0], [17.9, 290.0], [18.0, 290.0], [18.1, 290.0], [18.2, 290.0], [18.3, 290.0], [18.4, 290.0], [18.5, 290.0], [18.6, 290.0], [18.7, 290.0], [18.8, 290.0], [18.9, 290.0], [19.0, 290.0], [19.1, 290.0], [19.2, 290.0], [19.3, 290.0], [19.4, 290.0], [19.5, 290.0], [19.6, 290.0], [19.7, 290.0], [19.8, 291.0], [19.9, 291.0], [20.0, 291.0], [20.1, 291.0], [20.2, 291.0], [20.3, 291.0], [20.4, 291.0], [20.5, 291.0], [20.6, 291.0], [20.7, 291.0], [20.8, 291.0], [20.9, 291.0], [21.0, 291.0], [21.1, 291.0], [21.2, 291.0], [21.3, 291.0], [21.4, 291.0], [21.5, 291.0], [21.6, 291.0], [21.7, 291.0], [21.8, 291.0], [21.9, 291.0], [22.0, 291.0], [22.1, 291.0], [22.2, 291.0], [22.3, 291.0], [22.4, 291.0], [22.5, 291.0], [22.6, 291.0], [22.7, 291.0], [22.8, 291.0], [22.9, 291.0], [23.0, 291.0], [23.1, 291.0], [23.2, 291.0], [23.3, 291.0], [23.4, 291.0], [23.5, 291.0], [23.6, 291.0], [23.7, 291.0], [23.8, 291.0], [23.9, 291.0], [24.0, 291.0], [24.1, 291.0], [24.2, 291.0], [24.3, 291.0], [24.4, 291.0], [24.5, 291.0], [24.6, 291.0], [24.7, 292.0], [24.8, 292.0], [24.9, 292.0], [25.0, 292.0], [25.1, 292.0], [25.2, 292.0], [25.3, 292.0], [25.4, 292.0], [25.5, 292.0], [25.6, 292.0], [25.7, 292.0], [25.8, 292.0], [25.9, 292.0], [26.0, 292.0], [26.1, 292.0], [26.2, 292.0], [26.3, 292.0], [26.4, 292.0], [26.5, 292.0], [26.6, 292.0], [26.7, 292.0], [26.8, 292.0], [26.9, 292.0], [27.0, 292.0], [27.1, 292.0], [27.2, 292.0], [27.3, 292.0], [27.4, 292.0], [27.5, 292.0], [27.6, 292.0], [27.7, 292.0], [27.8, 292.0], [27.9, 292.0], [28.0, 292.0], [28.1, 292.0], [28.2, 292.0], [28.3, 292.0], [28.4, 293.0], [28.5, 293.0], [28.6, 293.0], [28.7, 293.0], [28.8, 293.0], [28.9, 293.0], [29.0, 293.0], [29.1, 293.0], [29.2, 293.0], [29.3, 293.0], [29.4, 293.0], [29.5, 293.0], [29.6, 293.0], [29.7, 294.0], [29.8, 294.0], [29.9, 294.0], [30.0, 294.0], [30.1, 294.0], [30.2, 294.0], [30.3, 294.0], [30.4, 294.0], [30.5, 294.0], [30.6, 294.0], [30.7, 294.0], [30.8, 294.0], [30.9, 294.0], [31.0, 294.0], [31.1, 294.0], [31.2, 294.0], [31.3, 294.0], [31.4, 294.0], [31.5, 294.0], [31.6, 294.0], [31.7, 294.0], [31.8, 294.0], [31.9, 294.0], [32.0, 294.0], [32.1, 294.0], [32.2, 294.0], [32.3, 294.0], [32.4, 294.0], [32.5, 294.0], [32.6, 294.0], [32.7, 294.0], [32.8, 294.0], [32.9, 294.0], [33.0, 294.0], [33.1, 294.0], [33.2, 294.0], [33.3, 294.0], [33.4, 295.0], [33.5, 295.0], [33.6, 295.0], [33.7, 295.0], [33.8, 295.0], [33.9, 295.0], [34.0, 295.0], [34.1, 295.0], [34.2, 295.0], [34.3, 295.0], [34.4, 295.0], [34.5, 295.0], [34.6, 295.0], [34.7, 295.0], [34.8, 295.0], [34.9, 295.0], [35.0, 295.0], [35.1, 295.0], [35.2, 295.0], [35.3, 295.0], [35.4, 295.0], [35.5, 295.0], [35.6, 295.0], [35.7, 295.0], [35.8, 295.0], [35.9, 296.0], [36.0, 296.0], [36.1, 296.0], [36.2, 296.0], [36.3, 296.0], [36.4, 296.0], [36.5, 296.0], [36.6, 296.0], [36.7, 296.0], [36.8, 296.0], [36.9, 296.0], [37.0, 296.0], [37.1, 297.0], [37.2, 297.0], [37.3, 297.0], [37.4, 297.0], [37.5, 297.0], [37.6, 297.0], [37.7, 297.0], [37.8, 297.0], [37.9, 297.0], [38.0, 297.0], [38.1, 297.0], [38.2, 297.0], [38.3, 297.0], [38.4, 297.0], [38.5, 297.0], [38.6, 297.0], [38.7, 297.0], [38.8, 297.0], [38.9, 297.0], [39.0, 297.0], [39.1, 297.0], [39.2, 297.0], [39.3, 297.0], [39.4, 297.0], [39.5, 297.0], [39.6, 298.0], [39.7, 298.0], [39.8, 298.0], [39.9, 298.0], [40.0, 298.0], [40.1, 298.0], [40.2, 298.0], [40.3, 298.0], [40.4, 298.0], [40.5, 298.0], [40.6, 298.0], [40.7, 298.0], [40.8, 298.0], [40.9, 298.0], [41.0, 298.0], [41.1, 298.0], [41.2, 298.0], [41.3, 298.0], [41.4, 298.0], [41.5, 298.0], [41.6, 298.0], [41.7, 298.0], [41.8, 298.0], [41.9, 298.0], [42.0, 299.0], [42.1, 299.0], [42.2, 299.0], [42.3, 299.0], [42.4, 299.0], [42.5, 299.0], [42.6, 299.0], [42.7, 299.0], [42.8, 299.0], [42.9, 299.0], [43.0, 299.0], [43.1, 299.0], [43.2, 299.0], [43.3, 300.0], [43.4, 300.0], [43.5, 300.0], [43.6, 300.0], [43.7, 300.0], [43.8, 300.0], [43.9, 300.0], [44.0, 300.0], [44.1, 300.0], [44.2, 300.0], [44.3, 300.0], [44.4, 300.0], [44.5, 300.0], [44.6, 300.0], [44.7, 300.0], [44.8, 300.0], [44.9, 300.0], [45.0, 300.0], [45.1, 300.0], [45.2, 300.0], [45.3, 300.0], [45.4, 300.0], [45.5, 300.0], [45.6, 300.0], [45.7, 300.0], [45.8, 300.0], [45.9, 300.0], [46.0, 300.0], [46.1, 300.0], [46.2, 300.0], [46.3, 300.0], [46.4, 300.0], [46.5, 300.0], [46.6, 300.0], [46.7, 300.0], [46.8, 300.0], [46.9, 300.0], [47.0, 301.0], [47.1, 301.0], [47.2, 301.0], [47.3, 301.0], [47.4, 301.0], [47.5, 301.0], [47.6, 301.0], [47.7, 301.0], [47.8, 301.0], [47.9, 301.0], [48.0, 301.0], [48.1, 301.0], [48.2, 301.0], [48.3, 301.0], [48.4, 301.0], [48.5, 301.0], [48.6, 301.0], [48.7, 301.0], [48.8, 301.0], [48.9, 301.0], [49.0, 301.0], [49.1, 301.0], [49.2, 301.0], [49.3, 301.0], [49.4, 301.0], [49.5, 301.0], [49.6, 301.0], [49.7, 301.0], [49.8, 301.0], [49.9, 301.0], [50.0, 301.0], [50.1, 301.0], [50.2, 301.0], [50.3, 301.0], [50.4, 301.0], [50.5, 301.0], [50.6, 301.0], [50.7, 302.0], [50.8, 302.0], [50.9, 302.0], [51.0, 302.0], [51.1, 302.0], [51.2, 302.0], [51.3, 302.0], [51.4, 302.0], [51.5, 302.0], [51.6, 302.0], [51.7, 302.0], [51.8, 302.0], [51.9, 303.0], [52.0, 303.0], [52.1, 303.0], [52.2, 303.0], [52.3, 303.0], [52.4, 303.0], [52.5, 303.0], [52.6, 303.0], [52.7, 303.0], [52.8, 303.0], [52.9, 303.0], [53.0, 303.0], [53.1, 303.0], [53.2, 303.0], [53.3, 303.0], [53.4, 303.0], [53.5, 303.0], [53.6, 303.0], [53.7, 303.0], [53.8, 303.0], [53.9, 303.0], [54.0, 303.0], [54.1, 303.0], [54.2, 303.0], [54.3, 303.0], [54.4, 305.0], [54.5, 305.0], [54.6, 305.0], [54.7, 305.0], [54.8, 305.0], [54.9, 305.0], [55.0, 305.0], [55.1, 305.0], [55.2, 305.0], [55.3, 305.0], [55.4, 305.0], [55.5, 305.0], [55.6, 306.0], [55.7, 306.0], [55.8, 306.0], [55.9, 306.0], [56.0, 306.0], [56.1, 306.0], [56.2, 306.0], [56.3, 306.0], [56.4, 306.0], [56.5, 306.0], [56.6, 306.0], [56.7, 306.0], [56.8, 306.0], [56.9, 306.0], [57.0, 306.0], [57.1, 306.0], [57.2, 306.0], [57.3, 306.0], [57.4, 306.0], [57.5, 306.0], [57.6, 306.0], [57.7, 306.0], [57.8, 306.0], [57.9, 306.0], [58.0, 306.0], [58.1, 307.0], [58.2, 307.0], [58.3, 307.0], [58.4, 307.0], [58.5, 307.0], [58.6, 307.0], [58.7, 307.0], [58.8, 307.0], [58.9, 307.0], [59.0, 307.0], [59.1, 307.0], [59.2, 307.0], [59.3, 307.0], [59.4, 307.0], [59.5, 307.0], [59.6, 307.0], [59.7, 307.0], [59.8, 307.0], [59.9, 307.0], [60.0, 307.0], [60.1, 307.0], [60.2, 307.0], [60.3, 307.0], [60.4, 307.0], [60.5, 307.0], [60.6, 307.0], [60.7, 307.0], [60.8, 307.0], [60.9, 307.0], [61.0, 307.0], [61.1, 307.0], [61.2, 307.0], [61.3, 307.0], [61.4, 307.0], [61.5, 307.0], [61.6, 307.0], [61.7, 307.0], [61.8, 308.0], [61.9, 308.0], [62.0, 308.0], [62.1, 308.0], [62.2, 308.0], [62.3, 308.0], [62.4, 308.0], [62.5, 308.0], [62.6, 308.0], [62.7, 308.0], [62.8, 308.0], [62.9, 308.0], [63.0, 308.0], [63.1, 308.0], [63.2, 308.0], [63.3, 308.0], [63.4, 308.0], [63.5, 308.0], [63.6, 308.0], [63.7, 308.0], [63.8, 308.0], [63.9, 308.0], [64.0, 308.0], [64.1, 308.0], [64.2, 309.0], [64.3, 309.0], [64.4, 309.0], [64.5, 309.0], [64.6, 309.0], [64.7, 309.0], [64.8, 309.0], [64.9, 309.0], [65.0, 309.0], [65.1, 309.0], [65.2, 309.0], [65.3, 309.0], [65.4, 309.0], [65.5, 309.0], [65.6, 309.0], [65.7, 309.0], [65.8, 309.0], [65.9, 309.0], [66.0, 309.0], [66.1, 309.0], [66.2, 309.0], [66.3, 309.0], [66.4, 309.0], [66.5, 309.0], [66.6, 309.0], [66.7, 312.0], [66.8, 312.0], [66.9, 312.0], [67.0, 312.0], [67.1, 312.0], [67.2, 312.0], [67.3, 312.0], [67.4, 312.0], [67.5, 312.0], [67.6, 312.0], [67.7, 312.0], [67.8, 312.0], [67.9, 312.0], [68.0, 312.0], [68.1, 312.0], [68.2, 312.0], [68.3, 312.0], [68.4, 312.0], [68.5, 312.0], [68.6, 312.0], [68.7, 312.0], [68.8, 312.0], [68.9, 312.0], [69.0, 312.0], [69.1, 312.0], [69.2, 313.0], [69.3, 313.0], [69.4, 313.0], [69.5, 313.0], [69.6, 313.0], [69.7, 313.0], [69.8, 313.0], [69.9, 313.0], [70.0, 313.0], [70.1, 313.0], [70.2, 313.0], [70.3, 313.0], [70.4, 313.0], [70.5, 313.0], [70.6, 313.0], [70.7, 313.0], [70.8, 313.0], [70.9, 313.0], [71.0, 313.0], [71.1, 313.0], [71.2, 313.0], [71.3, 313.0], [71.4, 313.0], [71.5, 313.0], [71.6, 313.0], [71.7, 315.0], [71.8, 315.0], [71.9, 315.0], [72.0, 315.0], [72.1, 315.0], [72.2, 315.0], [72.3, 315.0], [72.4, 315.0], [72.5, 315.0], [72.6, 315.0], [72.7, 315.0], [72.8, 315.0], [72.9, 315.0], [73.0, 315.0], [73.1, 315.0], [73.2, 315.0], [73.3, 315.0], [73.4, 315.0], [73.5, 315.0], [73.6, 315.0], [73.7, 315.0], [73.8, 315.0], [73.9, 315.0], [74.0, 315.0], [74.1, 317.0], [74.2, 317.0], [74.3, 317.0], [74.4, 317.0], [74.5, 317.0], [74.6, 317.0], [74.7, 317.0], [74.8, 317.0], [74.9, 317.0], [75.0, 317.0], [75.1, 317.0], [75.2, 317.0], [75.3, 317.0], [75.4, 320.0], [75.5, 320.0], [75.6, 320.0], [75.7, 320.0], [75.8, 320.0], [75.9, 320.0], [76.0, 320.0], [76.1, 320.0], [76.2, 320.0], [76.3, 320.0], [76.4, 320.0], [76.5, 320.0], [76.6, 321.0], [76.7, 321.0], [76.8, 321.0], [76.9, 321.0], [77.0, 321.0], [77.1, 321.0], [77.2, 321.0], [77.3, 321.0], [77.4, 321.0], [77.5, 321.0], [77.6, 321.0], [77.7, 321.0], [77.8, 321.0], [77.9, 321.0], [78.0, 321.0], [78.1, 321.0], [78.2, 321.0], [78.3, 321.0], [78.4, 321.0], [78.5, 321.0], [78.6, 321.0], [78.7, 321.0], [78.8, 321.0], [78.9, 321.0], [79.0, 321.0], [79.1, 321.0], [79.2, 321.0], [79.3, 321.0], [79.4, 321.0], [79.5, 321.0], [79.6, 321.0], [79.7, 321.0], [79.8, 321.0], [79.9, 321.0], [80.0, 321.0], [80.1, 321.0], [80.2, 321.0], [80.3, 322.0], [80.4, 322.0], [80.5, 322.0], [80.6, 322.0], [80.7, 322.0], [80.8, 322.0], [80.9, 322.0], [81.0, 322.0], [81.1, 322.0], [81.2, 322.0], [81.3, 322.0], [81.4, 322.0], [81.5, 531.0], [81.6, 531.0], [81.7, 531.0], [81.8, 531.0], [81.9, 531.0], [82.0, 531.0], [82.1, 531.0], [82.2, 531.0], [82.3, 531.0], [82.4, 531.0], [82.5, 531.0], [82.6, 531.0], [82.7, 531.0], [82.8, 561.0], [82.9, 561.0], [83.0, 561.0], [83.1, 561.0], [83.2, 561.0], [83.3, 561.0], [83.4, 561.0], [83.5, 561.0], [83.6, 561.0], [83.7, 561.0], [83.8, 561.0], [83.9, 561.0], [84.0, 565.0], [84.1, 565.0], [84.2, 565.0], [84.3, 565.0], [84.4, 565.0], [84.5, 565.0], [84.6, 565.0], [84.7, 565.0], [84.8, 565.0], [84.9, 565.0], [85.0, 565.0], [85.1, 565.0], [85.2, 586.0], [85.3, 586.0], [85.4, 586.0], [85.5, 586.0], [85.6, 586.0], [85.7, 586.0], [85.8, 586.0], [85.9, 586.0], [86.0, 586.0], [86.1, 586.0], [86.2, 586.0], [86.3, 586.0], [86.4, 586.0], [86.5, 595.0], [86.6, 595.0], [86.7, 595.0], [86.8, 595.0], [86.9, 595.0], [87.0, 595.0], [87.1, 595.0], [87.2, 595.0], [87.3, 595.0], [87.4, 595.0], [87.5, 595.0], [87.6, 595.0], [87.7, 601.0], [87.8, 601.0], [87.9, 601.0], [88.0, 601.0], [88.1, 601.0], [88.2, 601.0], [88.3, 601.0], [88.4, 601.0], [88.5, 601.0], [88.6, 601.0], [88.7, 601.0], [88.8, 601.0], [88.9, 607.0], [89.0, 607.0], [89.1, 607.0], [89.2, 607.0], [89.3, 607.0], [89.4, 607.0], [89.5, 607.0], [89.6, 607.0], [89.7, 607.0], [89.8, 607.0], [89.9, 607.0], [90.0, 607.0], [90.1, 607.0], [90.2, 860.0], [90.3, 860.0], [90.4, 860.0], [90.5, 860.0], [90.6, 860.0], [90.7, 860.0], [90.8, 860.0], [90.9, 860.0], [91.0, 860.0], [91.1, 860.0], [91.2, 860.0], [91.3, 860.0], [91.4, 946.0], [91.5, 946.0], [91.6, 946.0], [91.7, 946.0], [91.8, 946.0], [91.9, 946.0], [92.0, 946.0], [92.1, 946.0], [92.2, 946.0], [92.3, 946.0], [92.4, 946.0], [92.5, 946.0], [92.6, 1175.0], [92.7, 1175.0], [92.8, 1175.0], [92.9, 1175.0], [93.0, 1175.0], [93.1, 1175.0], [93.2, 1175.0], [93.3, 1175.0], [93.4, 1175.0], [93.5, 1175.0], [93.6, 1175.0], [93.7, 1175.0], [93.8, 1175.0], [93.9, 1560.0], [94.0, 1560.0], [94.1, 1560.0], [94.2, 1560.0], [94.3, 1560.0], [94.4, 1560.0], [94.5, 1560.0], [94.6, 1560.0], [94.7, 1560.0], [94.8, 1560.0], [94.9, 1560.0], [95.0, 1560.0], [95.1, 1625.0], [95.2, 1625.0], [95.3, 1625.0], [95.4, 1625.0], [95.5, 1625.0], [95.6, 1625.0], [95.7, 1625.0], [95.8, 1625.0], [95.9, 1625.0], [96.0, 1625.0], [96.1, 1625.0], [96.2, 1625.0], [96.3, 1766.0], [96.4, 1766.0], [96.5, 1766.0], [96.6, 1766.0], [96.7, 1766.0], [96.8, 1766.0], [96.9, 1766.0], [97.0, 1766.0], [97.1, 1766.0], [97.2, 1766.0], [97.3, 1766.0], [97.4, 1766.0], [97.5, 1766.0], [97.6, 2057.0], [97.7, 2057.0], [97.8, 2057.0], [97.9, 2057.0], [98.0, 2057.0], [98.1, 2057.0], [98.2, 2057.0], [98.3, 2057.0], [98.4, 2057.0], [98.5, 2057.0], [98.6, 2057.0], [98.7, 2057.0], [98.8, 3128.0], [98.9, 3128.0], [99.0, 3128.0], [99.1, 3128.0], [99.2, 3128.0], [99.3, 3128.0], [99.4, 3128.0], [99.5, 3128.0], [99.6, 3128.0], [99.7, 3128.0], [99.8, 3128.0], [99.9, 3128.0], [100.0, 3128.0]], "isOverall": false, "label": "https://www.echotex.com/about", "isController": false}, {"data": [[0.0, 275.0], [0.1, 275.0], [0.2, 275.0], [0.3, 275.0], [0.4, 275.0], [0.5, 275.0], [0.6, 275.0], [0.7, 275.0], [0.8, 275.0], [0.9, 275.0], [1.0, 275.0], [1.1, 275.0], [1.2, 275.0], [1.3, 275.0], [1.4, 275.0], [1.5, 275.0], [1.6, 275.0], [1.7, 275.0], [1.8, 275.0], [1.9, 275.0], [2.0, 275.0], [2.1, 275.0], [2.2, 275.0], [2.3, 275.0], [2.4, 275.0], [2.5, 279.0], [2.6, 279.0], [2.7, 279.0], [2.8, 279.0], [2.9, 279.0], [3.0, 279.0], [3.1, 279.0], [3.2, 279.0], [3.3, 279.0], [3.4, 279.0], [3.5, 279.0], [3.6, 279.0], [3.7, 279.0], [3.8, 280.0], [3.9, 280.0], [4.0, 280.0], [4.1, 280.0], [4.2, 280.0], [4.3, 280.0], [4.4, 280.0], [4.5, 280.0], [4.6, 280.0], [4.7, 280.0], [4.8, 280.0], [4.9, 280.0], [5.0, 282.0], [5.1, 282.0], [5.2, 282.0], [5.3, 282.0], [5.4, 282.0], [5.5, 282.0], [5.6, 282.0], [5.7, 282.0], [5.8, 282.0], [5.9, 282.0], [6.0, 282.0], [6.1, 282.0], [6.2, 282.0], [6.3, 282.0], [6.4, 282.0], [6.5, 282.0], [6.6, 282.0], [6.7, 282.0], [6.8, 282.0], [6.9, 282.0], [7.0, 282.0], [7.1, 282.0], [7.2, 282.0], [7.3, 282.0], [7.4, 282.0], [7.5, 283.0], [7.6, 283.0], [7.7, 283.0], [7.8, 283.0], [7.9, 283.0], [8.0, 283.0], [8.1, 283.0], [8.2, 283.0], [8.3, 283.0], [8.4, 283.0], [8.5, 283.0], [8.6, 283.0], [8.7, 285.0], [8.8, 285.0], [8.9, 285.0], [9.0, 285.0], [9.1, 285.0], [9.2, 285.0], [9.3, 285.0], [9.4, 285.0], [9.5, 285.0], [9.6, 285.0], [9.7, 285.0], [9.8, 285.0], [9.9, 286.0], [10.0, 286.0], [10.1, 286.0], [10.2, 286.0], [10.3, 286.0], [10.4, 286.0], [10.5, 286.0], [10.6, 286.0], [10.7, 286.0], [10.8, 286.0], [10.9, 286.0], [11.0, 286.0], [11.1, 286.0], [11.2, 287.0], [11.3, 287.0], [11.4, 287.0], [11.5, 287.0], [11.6, 287.0], [11.7, 287.0], [11.8, 287.0], [11.9, 287.0], [12.0, 287.0], [12.1, 287.0], [12.2, 287.0], [12.3, 287.0], [12.4, 287.0], [12.5, 287.0], [12.6, 287.0], [12.7, 287.0], [12.8, 287.0], [12.9, 287.0], [13.0, 287.0], [13.1, 287.0], [13.2, 287.0], [13.3, 287.0], [13.4, 287.0], [13.5, 287.0], [13.6, 289.0], [13.7, 289.0], [13.8, 289.0], [13.9, 289.0], [14.0, 289.0], [14.1, 289.0], [14.2, 289.0], [14.3, 289.0], [14.4, 289.0], [14.5, 289.0], [14.6, 289.0], [14.7, 289.0], [14.8, 289.0], [14.9, 289.0], [15.0, 289.0], [15.1, 289.0], [15.2, 289.0], [15.3, 289.0], [15.4, 289.0], [15.5, 289.0], [15.6, 289.0], [15.7, 289.0], [15.8, 289.0], [15.9, 289.0], [16.0, 289.0], [16.1, 292.0], [16.2, 292.0], [16.3, 292.0], [16.4, 292.0], [16.5, 292.0], [16.6, 292.0], [16.7, 292.0], [16.8, 292.0], [16.9, 292.0], [17.0, 292.0], [17.1, 292.0], [17.2, 292.0], [17.3, 292.0], [17.4, 292.0], [17.5, 292.0], [17.6, 292.0], [17.7, 292.0], [17.8, 292.0], [17.9, 292.0], [18.0, 292.0], [18.1, 292.0], [18.2, 292.0], [18.3, 292.0], [18.4, 292.0], [18.5, 292.0], [18.6, 293.0], [18.7, 293.0], [18.8, 293.0], [18.9, 293.0], [19.0, 293.0], [19.1, 293.0], [19.2, 293.0], [19.3, 293.0], [19.4, 293.0], [19.5, 293.0], [19.6, 293.0], [19.7, 293.0], [19.8, 293.0], [19.9, 293.0], [20.0, 293.0], [20.1, 293.0], [20.2, 293.0], [20.3, 293.0], [20.4, 293.0], [20.5, 293.0], [20.6, 293.0], [20.7, 293.0], [20.8, 293.0], [20.9, 293.0], [21.0, 294.0], [21.1, 294.0], [21.2, 294.0], [21.3, 294.0], [21.4, 294.0], [21.5, 294.0], [21.6, 294.0], [21.7, 294.0], [21.8, 294.0], [21.9, 294.0], [22.0, 294.0], [22.1, 294.0], [22.2, 294.0], [22.3, 295.0], [22.4, 295.0], [22.5, 295.0], [22.6, 295.0], [22.7, 295.0], [22.8, 295.0], [22.9, 295.0], [23.0, 295.0], [23.1, 295.0], [23.2, 295.0], [23.3, 295.0], [23.4, 295.0], [23.5, 297.0], [23.6, 297.0], [23.7, 297.0], [23.8, 297.0], [23.9, 297.0], [24.0, 297.0], [24.1, 297.0], [24.2, 297.0], [24.3, 297.0], [24.4, 297.0], [24.5, 297.0], [24.6, 297.0], [24.7, 297.0], [24.8, 297.0], [24.9, 297.0], [25.0, 297.0], [25.1, 297.0], [25.2, 297.0], [25.3, 297.0], [25.4, 297.0], [25.5, 297.0], [25.6, 297.0], [25.7, 297.0], [25.8, 297.0], [25.9, 297.0], [26.0, 298.0], [26.1, 298.0], [26.2, 298.0], [26.3, 298.0], [26.4, 298.0], [26.5, 298.0], [26.6, 298.0], [26.7, 298.0], [26.8, 298.0], [26.9, 298.0], [27.0, 298.0], [27.1, 298.0], [27.2, 299.0], [27.3, 299.0], [27.4, 299.0], [27.5, 299.0], [27.6, 299.0], [27.7, 299.0], [27.8, 299.0], [27.9, 299.0], [28.0, 299.0], [28.1, 299.0], [28.2, 299.0], [28.3, 299.0], [28.4, 300.0], [28.5, 300.0], [28.6, 300.0], [28.7, 300.0], [28.8, 300.0], [28.9, 300.0], [29.0, 300.0], [29.1, 300.0], [29.2, 300.0], [29.3, 300.0], [29.4, 300.0], [29.5, 300.0], [29.6, 300.0], [29.7, 301.0], [29.8, 301.0], [29.9, 301.0], [30.0, 301.0], [30.1, 301.0], [30.2, 301.0], [30.3, 301.0], [30.4, 301.0], [30.5, 301.0], [30.6, 301.0], [30.7, 301.0], [30.8, 301.0], [30.9, 303.0], [31.0, 303.0], [31.1, 303.0], [31.2, 303.0], [31.3, 303.0], [31.4, 303.0], [31.5, 303.0], [31.6, 303.0], [31.7, 303.0], [31.8, 303.0], [31.9, 303.0], [32.0, 303.0], [32.1, 304.0], [32.2, 304.0], [32.3, 304.0], [32.4, 304.0], [32.5, 304.0], [32.6, 304.0], [32.7, 304.0], [32.8, 304.0], [32.9, 304.0], [33.0, 304.0], [33.1, 304.0], [33.2, 304.0], [33.3, 304.0], [33.4, 304.0], [33.5, 304.0], [33.6, 304.0], [33.7, 304.0], [33.8, 304.0], [33.9, 304.0], [34.0, 304.0], [34.1, 304.0], [34.2, 304.0], [34.3, 304.0], [34.4, 304.0], [34.5, 304.0], [34.6, 305.0], [34.7, 305.0], [34.8, 305.0], [34.9, 305.0], [35.0, 305.0], [35.1, 305.0], [35.2, 305.0], [35.3, 305.0], [35.4, 305.0], [35.5, 305.0], [35.6, 305.0], [35.7, 305.0], [35.8, 305.0], [35.9, 305.0], [36.0, 305.0], [36.1, 305.0], [36.2, 305.0], [36.3, 305.0], [36.4, 305.0], [36.5, 305.0], [36.6, 305.0], [36.7, 305.0], [36.8, 305.0], [36.9, 305.0], [37.0, 305.0], [37.1, 305.0], [37.2, 305.0], [37.3, 305.0], [37.4, 305.0], [37.5, 305.0], [37.6, 305.0], [37.7, 305.0], [37.8, 305.0], [37.9, 305.0], [38.0, 305.0], [38.1, 305.0], [38.2, 305.0], [38.3, 306.0], [38.4, 306.0], [38.5, 306.0], [38.6, 306.0], [38.7, 306.0], [38.8, 306.0], [38.9, 306.0], [39.0, 306.0], [39.1, 306.0], [39.2, 306.0], [39.3, 306.0], [39.4, 306.0], [39.5, 306.0], [39.6, 306.0], [39.7, 306.0], [39.8, 306.0], [39.9, 306.0], [40.0, 306.0], [40.1, 306.0], [40.2, 306.0], [40.3, 306.0], [40.4, 306.0], [40.5, 306.0], [40.6, 306.0], [40.7, 306.0], [40.8, 306.0], [40.9, 306.0], [41.0, 306.0], [41.1, 306.0], [41.2, 306.0], [41.3, 306.0], [41.4, 306.0], [41.5, 306.0], [41.6, 306.0], [41.7, 306.0], [41.8, 306.0], [41.9, 306.0], [42.0, 306.0], [42.1, 306.0], [42.2, 306.0], [42.3, 306.0], [42.4, 306.0], [42.5, 306.0], [42.6, 306.0], [42.7, 306.0], [42.8, 306.0], [42.9, 306.0], [43.0, 306.0], [43.1, 306.0], [43.2, 306.0], [43.3, 307.0], [43.4, 307.0], [43.5, 307.0], [43.6, 307.0], [43.7, 307.0], [43.8, 307.0], [43.9, 307.0], [44.0, 307.0], [44.1, 307.0], [44.2, 307.0], [44.3, 307.0], [44.4, 307.0], [44.5, 307.0], [44.6, 307.0], [44.7, 307.0], [44.8, 307.0], [44.9, 307.0], [45.0, 307.0], [45.1, 307.0], [45.2, 307.0], [45.3, 307.0], [45.4, 307.0], [45.5, 307.0], [45.6, 307.0], [45.7, 308.0], [45.8, 308.0], [45.9, 308.0], [46.0, 308.0], [46.1, 308.0], [46.2, 308.0], [46.3, 308.0], [46.4, 308.0], [46.5, 308.0], [46.6, 308.0], [46.7, 308.0], [46.8, 308.0], [46.9, 308.0], [47.0, 308.0], [47.1, 308.0], [47.2, 308.0], [47.3, 308.0], [47.4, 308.0], [47.5, 308.0], [47.6, 308.0], [47.7, 308.0], [47.8, 308.0], [47.9, 308.0], [48.0, 308.0], [48.1, 308.0], [48.2, 309.0], [48.3, 309.0], [48.4, 309.0], [48.5, 309.0], [48.6, 309.0], [48.7, 309.0], [48.8, 309.0], [48.9, 309.0], [49.0, 309.0], [49.1, 309.0], [49.2, 309.0], [49.3, 309.0], [49.4, 310.0], [49.5, 310.0], [49.6, 310.0], [49.7, 310.0], [49.8, 310.0], [49.9, 310.0], [50.0, 310.0], [50.1, 310.0], [50.2, 310.0], [50.3, 310.0], [50.4, 310.0], [50.5, 310.0], [50.6, 310.0], [50.7, 311.0], [50.8, 311.0], [50.9, 311.0], [51.0, 311.0], [51.1, 311.0], [51.2, 311.0], [51.3, 311.0], [51.4, 311.0], [51.5, 311.0], [51.6, 311.0], [51.7, 311.0], [51.8, 311.0], [51.9, 312.0], [52.0, 312.0], [52.1, 312.0], [52.2, 312.0], [52.3, 312.0], [52.4, 312.0], [52.5, 312.0], [52.6, 312.0], [52.7, 312.0], [52.8, 312.0], [52.9, 312.0], [53.0, 312.0], [53.1, 312.0], [53.2, 312.0], [53.3, 312.0], [53.4, 312.0], [53.5, 312.0], [53.6, 312.0], [53.7, 312.0], [53.8, 312.0], [53.9, 312.0], [54.0, 312.0], [54.1, 312.0], [54.2, 312.0], [54.3, 312.0], [54.4, 313.0], [54.5, 313.0], [54.6, 313.0], [54.7, 313.0], [54.8, 313.0], [54.9, 313.0], [55.0, 313.0], [55.1, 313.0], [55.2, 313.0], [55.3, 313.0], [55.4, 313.0], [55.5, 313.0], [55.6, 313.0], [55.7, 313.0], [55.8, 313.0], [55.9, 313.0], [56.0, 313.0], [56.1, 313.0], [56.2, 313.0], [56.3, 313.0], [56.4, 313.0], [56.5, 313.0], [56.6, 313.0], [56.7, 313.0], [56.8, 313.0], [56.9, 313.0], [57.0, 313.0], [57.1, 313.0], [57.2, 313.0], [57.3, 313.0], [57.4, 313.0], [57.5, 313.0], [57.6, 313.0], [57.7, 313.0], [57.8, 313.0], [57.9, 313.0], [58.0, 313.0], [58.1, 314.0], [58.2, 314.0], [58.3, 314.0], [58.4, 314.0], [58.5, 314.0], [58.6, 314.0], [58.7, 314.0], [58.8, 314.0], [58.9, 314.0], [59.0, 314.0], [59.1, 314.0], [59.2, 314.0], [59.3, 314.0], [59.4, 314.0], [59.5, 314.0], [59.6, 314.0], [59.7, 314.0], [59.8, 314.0], [59.9, 314.0], [60.0, 314.0], [60.1, 314.0], [60.2, 314.0], [60.3, 314.0], [60.4, 314.0], [60.5, 316.0], [60.6, 316.0], [60.7, 316.0], [60.8, 316.0], [60.9, 316.0], [61.0, 316.0], [61.1, 316.0], [61.2, 316.0], [61.3, 316.0], [61.4, 316.0], [61.5, 316.0], [61.6, 316.0], [61.7, 316.0], [61.8, 318.0], [61.9, 318.0], [62.0, 318.0], [62.1, 318.0], [62.2, 318.0], [62.3, 318.0], [62.4, 318.0], [62.5, 318.0], [62.6, 318.0], [62.7, 318.0], [62.8, 318.0], [62.9, 318.0], [63.0, 320.0], [63.1, 320.0], [63.2, 320.0], [63.3, 320.0], [63.4, 320.0], [63.5, 320.0], [63.6, 320.0], [63.7, 320.0], [63.8, 320.0], [63.9, 320.0], [64.0, 320.0], [64.1, 320.0], [64.2, 321.0], [64.3, 321.0], [64.4, 321.0], [64.5, 321.0], [64.6, 321.0], [64.7, 321.0], [64.8, 321.0], [64.9, 321.0], [65.0, 321.0], [65.1, 321.0], [65.2, 321.0], [65.3, 321.0], [65.4, 321.0], [65.5, 322.0], [65.6, 322.0], [65.7, 322.0], [65.8, 322.0], [65.9, 322.0], [66.0, 322.0], [66.1, 322.0], [66.2, 322.0], [66.3, 322.0], [66.4, 322.0], [66.5, 322.0], [66.6, 322.0], [66.7, 322.0], [66.8, 322.0], [66.9, 322.0], [67.0, 322.0], [67.1, 322.0], [67.2, 322.0], [67.3, 322.0], [67.4, 322.0], [67.5, 322.0], [67.6, 322.0], [67.7, 322.0], [67.8, 322.0], [67.9, 322.0], [68.0, 323.0], [68.1, 323.0], [68.2, 323.0], [68.3, 323.0], [68.4, 323.0], [68.5, 323.0], [68.6, 323.0], [68.7, 323.0], [68.8, 323.0], [68.9, 323.0], [69.0, 323.0], [69.1, 323.0], [69.2, 323.0], [69.3, 323.0], [69.4, 323.0], [69.5, 323.0], [69.6, 323.0], [69.7, 323.0], [69.8, 323.0], [69.9, 323.0], [70.0, 323.0], [70.1, 323.0], [70.2, 323.0], [70.3, 323.0], [70.4, 331.0], [70.5, 331.0], [70.6, 331.0], [70.7, 331.0], [70.8, 331.0], [70.9, 331.0], [71.0, 331.0], [71.1, 331.0], [71.2, 331.0], [71.3, 331.0], [71.4, 331.0], [71.5, 331.0], [71.6, 331.0], [71.7, 333.0], [71.8, 333.0], [71.9, 333.0], [72.0, 333.0], [72.1, 333.0], [72.2, 333.0], [72.3, 333.0], [72.4, 333.0], [72.5, 333.0], [72.6, 333.0], [72.7, 333.0], [72.8, 333.0], [72.9, 560.0], [73.0, 560.0], [73.1, 560.0], [73.2, 560.0], [73.3, 560.0], [73.4, 560.0], [73.5, 560.0], [73.6, 560.0], [73.7, 560.0], [73.8, 560.0], [73.9, 560.0], [74.0, 560.0], [74.1, 567.0], [74.2, 567.0], [74.3, 567.0], [74.4, 567.0], [74.5, 567.0], [74.6, 567.0], [74.7, 567.0], [74.8, 567.0], [74.9, 567.0], [75.0, 567.0], [75.1, 567.0], [75.2, 567.0], [75.3, 567.0], [75.4, 572.0], [75.5, 572.0], [75.6, 572.0], [75.7, 572.0], [75.8, 572.0], [75.9, 572.0], [76.0, 572.0], [76.1, 572.0], [76.2, 572.0], [76.3, 572.0], [76.4, 572.0], [76.5, 572.0], [76.6, 573.0], [76.7, 573.0], [76.8, 573.0], [76.9, 573.0], [77.0, 573.0], [77.1, 573.0], [77.2, 573.0], [77.3, 573.0], [77.4, 573.0], [77.5, 573.0], [77.6, 573.0], [77.7, 573.0], [77.8, 574.0], [77.9, 574.0], [78.0, 574.0], [78.1, 574.0], [78.2, 574.0], [78.3, 574.0], [78.4, 574.0], [78.5, 574.0], [78.6, 574.0], [78.7, 574.0], [78.8, 574.0], [78.9, 574.0], [79.0, 574.0], [79.1, 580.0], [79.2, 580.0], [79.3, 580.0], [79.4, 580.0], [79.5, 580.0], [79.6, 580.0], [79.7, 580.0], [79.8, 580.0], [79.9, 580.0], [80.0, 580.0], [80.1, 580.0], [80.2, 580.0], [80.3, 581.0], [80.4, 581.0], [80.5, 581.0], [80.6, 581.0], [80.7, 581.0], [80.8, 581.0], [80.9, 581.0], [81.0, 581.0], [81.1, 581.0], [81.2, 581.0], [81.3, 581.0], [81.4, 581.0], [81.5, 586.0], [81.6, 586.0], [81.7, 586.0], [81.8, 586.0], [81.9, 586.0], [82.0, 586.0], [82.1, 586.0], [82.2, 586.0], [82.3, 586.0], [82.4, 586.0], [82.5, 586.0], [82.6, 586.0], [82.7, 586.0], [82.8, 593.0], [82.9, 593.0], [83.0, 593.0], [83.1, 593.0], [83.2, 593.0], [83.3, 593.0], [83.4, 593.0], [83.5, 593.0], [83.6, 593.0], [83.7, 593.0], [83.8, 593.0], [83.9, 593.0], [84.0, 597.0], [84.1, 597.0], [84.2, 597.0], [84.3, 597.0], [84.4, 597.0], [84.5, 597.0], [84.6, 597.0], [84.7, 597.0], [84.8, 597.0], [84.9, 597.0], [85.0, 597.0], [85.1, 597.0], [85.2, 608.0], [85.3, 608.0], [85.4, 608.0], [85.5, 608.0], [85.6, 608.0], [85.7, 608.0], [85.8, 608.0], [85.9, 608.0], [86.0, 608.0], [86.1, 608.0], [86.2, 608.0], [86.3, 608.0], [86.4, 608.0], [86.5, 615.0], [86.6, 615.0], [86.7, 615.0], [86.8, 615.0], [86.9, 615.0], [87.0, 615.0], [87.1, 615.0], [87.2, 615.0], [87.3, 615.0], [87.4, 615.0], [87.5, 615.0], [87.6, 615.0], [87.7, 643.0], [87.8, 643.0], [87.9, 643.0], [88.0, 643.0], [88.1, 643.0], [88.2, 643.0], [88.3, 643.0], [88.4, 643.0], [88.5, 643.0], [88.6, 643.0], [88.7, 643.0], [88.8, 643.0], [88.9, 669.0], [89.0, 669.0], [89.1, 669.0], [89.2, 669.0], [89.3, 669.0], [89.4, 669.0], [89.5, 669.0], [89.6, 669.0], [89.7, 669.0], [89.8, 669.0], [89.9, 669.0], [90.0, 669.0], [90.1, 669.0], [90.2, 853.0], [90.3, 853.0], [90.4, 853.0], [90.5, 853.0], [90.6, 853.0], [90.7, 853.0], [90.8, 853.0], [90.9, 853.0], [91.0, 853.0], [91.1, 853.0], [91.2, 853.0], [91.3, 853.0], [91.4, 890.0], [91.5, 890.0], [91.6, 890.0], [91.7, 890.0], [91.8, 890.0], [91.9, 890.0], [92.0, 890.0], [92.1, 890.0], [92.2, 890.0], [92.3, 890.0], [92.4, 890.0], [92.5, 890.0], [92.6, 1114.0], [92.7, 1114.0], [92.8, 1114.0], [92.9, 1114.0], [93.0, 1114.0], [93.1, 1114.0], [93.2, 1114.0], [93.3, 1114.0], [93.4, 1114.0], [93.5, 1114.0], [93.6, 1114.0], [93.7, 1114.0], [93.8, 1114.0], [93.9, 1647.0], [94.0, 1647.0], [94.1, 1647.0], [94.2, 1647.0], [94.3, 1647.0], [94.4, 1647.0], [94.5, 1647.0], [94.6, 1647.0], [94.7, 1647.0], [94.8, 1647.0], [94.9, 1647.0], [95.0, 1647.0], [95.1, 1971.0], [95.2, 1971.0], [95.3, 1971.0], [95.4, 1971.0], [95.5, 1971.0], [95.6, 1971.0], [95.7, 1971.0], [95.8, 1971.0], [95.9, 1971.0], [96.0, 1971.0], [96.1, 1971.0], [96.2, 1971.0], [96.3, 2042.0], [96.4, 2042.0], [96.5, 2042.0], [96.6, 2042.0], [96.7, 2042.0], [96.8, 2042.0], [96.9, 2042.0], [97.0, 2042.0], [97.1, 2042.0], [97.2, 2042.0], [97.3, 2042.0], [97.4, 2042.0], [97.5, 2042.0], [97.6, 2398.0], [97.7, 2398.0], [97.8, 2398.0], [97.9, 2398.0], [98.0, 2398.0], [98.1, 2398.0], [98.2, 2398.0], [98.3, 2398.0], [98.4, 2398.0], [98.5, 2398.0], [98.6, 2398.0], [98.7, 2398.0], [98.8, 3104.0], [98.9, 3104.0], [99.0, 3104.0], [99.1, 3104.0], [99.2, 3104.0], [99.3, 3104.0], [99.4, 3104.0], [99.5, 3104.0], [99.6, 3104.0], [99.7, 3104.0], [99.8, 3104.0], [99.9, 3104.0], [100.0, 3104.0]], "isOverall": false, "label": "https://www.echotex.com/careers", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 40.0, "series": [{"data": [[10800.0, 1.0], [2800.0, 9.0], [2700.0, 7.0], [2900.0, 9.0], [3000.0, 1.0], [3100.0, 7.0], [3300.0, 6.0], [3200.0, 5.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3800.0, 2.0], [4000.0, 1.0], [4100.0, 1.0], [4300.0, 2.0], [4400.0, 2.0], [4700.0, 2.0], [4800.0, 1.0], [5100.0, 2.0], [5000.0, 2.0], [5500.0, 1.0], [5800.0, 1.0], [5900.0, 2.0], [6000.0, 2.0], [6400.0, 2.0], [6800.0, 1.0], [6700.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7600.0, 3.0], [7700.0, 1.0], [8000.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[2100.0, 1.0], [8200.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [600.0, 8.0], [2500.0, 2.0], [2600.0, 2.0], [700.0, 2.0], [2700.0, 1.0], [2800.0, 1.0], [3100.0, 4.0], [800.0, 15.0], [3300.0, 1.0], [900.0, 4.0], [1000.0, 1.0], [1100.0, 4.0], [1400.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [500.0, 24.0]], "isOverall": false, "label": "https://www.echotex.com/new-index-1", "isController": false}, {"data": [[2200.0, 2.0], [2300.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [3300.0, 1.0], [3500.0, 2.0], [4400.0, 1.0], [1600.0, 21.0], [1700.0, 40.0], [1800.0, 5.0], [1900.0, 3.0], [2000.0, 1.0]], "isOverall": false, "label": "https://www.echotex.com/", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 31.0], [600.0, 2.0], [1500.0, 1.0], [3100.0, 1.0], [200.0, 35.0], [800.0, 1.0], [1600.0, 1.0], [1700.0, 1.0], [900.0, 1.0], [500.0, 5.0], [2000.0, 1.0]], "isOverall": false, "label": "https://www.echotex.com/about", "isController": false}, {"data": [[2300.0, 1.0], [1100.0, 1.0], [300.0, 36.0], [600.0, 4.0], [3100.0, 1.0], [200.0, 23.0], [800.0, 2.0], [1600.0, 1.0], [1900.0, 1.0], [500.0, 10.0], [2000.0, 1.0]], "isOverall": false, "label": "https://www.echotex.com/careers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 124.0, "series": [{"data": [[0.0, 124.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 86.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 113.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 28.63862928348911, "minX": 1.73066796E12, "maxY": 28.71428571428572, "series": [{"data": [[1.73066802E12, 28.63862928348911], [1.73066796E12, 28.71428571428572]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73066802E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 275.0, "minX": 1.0, "maxY": 10833.0, "series": [{"data": [[32.0, 3437.2], [33.0, 4785.666666666667], [2.0, 8094.0], [35.0, 3930.6000000000004], [34.0, 5269.333333333333], [36.0, 4145.0], [37.0, 4648.666666666667], [39.0, 4267.5], [38.0, 3974.4], [3.0, 6404.0], [4.0, 7725.0], [5.0, 4307.0], [6.0, 6027.0], [7.0, 4352.0], [8.0, 5054.0], [9.0, 7695.0], [10.0, 2885.0], [11.0, 3373.0], [12.0, 2864.0], [13.0, 2866.0], [14.0, 3190.0], [15.0, 3337.0], [16.0, 2977.0], [1.0, 10833.0], [17.0, 3276.0], [18.0, 3146.0], [19.0, 7140.0], [20.0, 5898.0], [21.0, 3288.0], [22.0, 7666.0], [23.0, 2908.0], [24.0, 2982.0], [25.0, 2897.0], [26.0, 4730.0], [27.0, 3222.0], [28.0, 3788.0], [29.0, 3193.6666666666665], [30.0, 3739.6], [31.0, 3215.1428571428573]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[27.185185185185183, 4218.938271604937]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[32.0, 719.0], [33.0, 1543.25], [2.0, 5713.0], [34.0, 1203.1666666666665], [35.0, 1204.25], [36.0, 1601.0], [37.0, 1224.0], [38.0, 1529.0000000000002], [4.0, 1968.0], [6.0, 1703.0], [7.0, 798.0], [8.0, 2619.0], [11.0, 4145.5], [12.0, 741.0], [14.0, 585.0], [15.0, 704.0], [16.0, 920.0], [1.0, 8259.0], [18.0, 2558.0], [20.0, 612.0], [21.0, 591.0], [22.0, 1560.3333333333333], [24.0, 948.6666666666666], [29.0, 871.2], [30.0, 731.7777777777778], [31.0, 851.8]], "isOverall": false, "label": "https://www.echotex.com/new-index-1", "isController": false}, {"data": [[28.148148148148145, 1372.123456790124]], "isOverall": false, "label": "https://www.echotex.com/new-index-1-Aggregated", "isController": false}, {"data": [[32.0, 2085.5714285714284], [33.0, 1762.3333333333333], [35.0, 1742.8888888888891], [34.0, 1967.1428571428573], [36.0, 2164.7142857142853], [37.0, 1711.3333333333335], [38.0, 1699.3333333333333], [15.0, 3596.0], [20.0, 1703.0], [21.0, 1720.0], [22.0, 1899.0], [23.0, 2199.0], [24.0, 1877.7142857142856], [25.0, 1635.0], [27.0, 1685.0], [29.0, 1749.6666666666667], [30.0, 1708.2499999999998], [31.0, 1728.6666666666667]], "isOverall": false, "label": "https://www.echotex.com/", "isController": false}, {"data": [[30.320987654320994, 1895.543209876543]], "isOverall": false, "label": "https://www.echotex.com/-Aggregated", "isController": false}, {"data": [[32.0, 292.4], [33.0, 298.0], [34.0, 438.2222222222222], [35.0, 482.3636363636363], [36.0, 1242.3333333333335], [37.0, 434.42857142857144], [38.0, 292.0], [39.0, 1029.0], [11.0, 565.0], [12.0, 1625.0], [15.0, 295.0], [17.0, 297.0], [18.0, 294.0], [21.0, 303.0], [22.0, 304.3333333333333], [23.0, 561.0], [24.0, 310.0], [25.0, 288.5], [26.0, 315.0], [27.0, 291.0], [28.0, 607.0], [29.0, 965.0], [30.0, 303.25], [31.0, 302.5]], "isOverall": false, "label": "https://www.echotex.com/about", "isController": false}, {"data": [[30.432098765432112, 455.0123456790124]], "isOverall": false, "label": "https://www.echotex.com/about-Aggregated", "isController": false}, {"data": [[32.0, 482.4], [33.0, 881.0], [2.0, 301.0], [35.0, 496.3], [34.0, 389.3333333333333], [36.0, 348.4285714285714], [37.0, 488.3333333333333], [39.0, 310.5], [38.0, 714.6], [3.0, 275.0], [4.0, 3104.0], [5.0, 560.0], [6.0, 1114.0], [7.0, 280.0], [8.0, 306.0], [9.0, 287.0], [10.0, 310.0], [11.0, 323.0], [12.0, 292.0], [13.0, 313.0], [14.0, 308.0], [15.0, 297.0], [16.0, 299.0], [1.0, 580.0], [17.0, 586.0], [18.0, 305.0], [19.0, 1971.0], [20.0, 608.0], [21.0, 322.0], [22.0, 669.0], [23.0, 305.0], [24.0, 323.0], [25.0, 308.0], [26.0, 581.0], [27.0, 294.0], [28.0, 313.0], [29.0, 397.3333333333333], [30.0, 420.0], [31.0, 298.14285714285717]], "isOverall": false, "label": "https://www.echotex.com/careers", "isController": false}, {"data": [[27.185185185185183, 496.25925925925935]], "isOverall": false, "label": "https://www.echotex.com/careers-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 39.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 665.1, "minX": 1.73066796E12, "maxY": 420223.7, "series": [{"data": [[1.73066802E12, 420223.7], [1.73066796E12, 115369.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73066802E12, 2362.95], [1.73066796E12, 665.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73066802E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 324.5, "minX": 1.73066796E12, "maxY": 4361.608695652176, "series": [{"data": [[1.73066802E12, 4361.608695652176], [1.73066796E12, 3398.583333333334]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73066802E12, 1497.8787878787878], [1.73066796E12, 818.8]], "isOverall": false, "label": "https://www.echotex.com/new-index-1", "isController": false}, {"data": [[1.73066802E12, 1888.8596491228068], [1.73066796E12, 1911.4166666666665]], "isOverall": false, "label": "https://www.echotex.com/", "isController": false}, {"data": [[1.73066802E12, 471.94999999999993], [1.73066796E12, 406.6190476190476]], "isOverall": false, "label": "https://www.echotex.com/about", "isController": false}, {"data": [[1.73066802E12, 526.1304347826089], [1.73066796E12, 324.5]], "isOverall": false, "label": "https://www.echotex.com/careers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73066802E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 282.75, "minX": 1.73066796E12, "maxY": 2022.7499999999998, "series": [{"data": [[1.73066802E12, 1836.3333333333335], [1.73066796E12, 2022.7499999999998]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73066802E12, 312.3333333333334], [1.73066796E12, 298.53333333333336]], "isOverall": false, "label": "https://www.echotex.com/new-index-1", "isController": false}, {"data": [[1.73066802E12, 879.4736842105262], [1.73066796E12, 1069.5]], "isOverall": false, "label": "https://www.echotex.com/", "isController": false}, {"data": [[1.73066802E12, 300.0333333333333], [1.73066796E12, 297.76190476190476]], "isOverall": false, "label": "https://www.echotex.com/about", "isController": false}, {"data": [[1.73066802E12, 325.24637681159425], [1.73066796E12, 282.75]], "isOverall": false, "label": "https://www.echotex.com/careers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73066802E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73066796E12, "maxY": 879.6666666666667, "series": [{"data": [[1.73066802E12, 600.2753623188407], [1.73066796E12, 879.6666666666667]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73066802E12, 0.0], [1.73066796E12, 0.0]], "isOverall": false, "label": "https://www.echotex.com/new-index-1", "isController": false}, {"data": [[1.73066802E12, 585.3684210526316], [1.73066796E12, 775.375]], "isOverall": false, "label": "https://www.echotex.com/", "isController": false}, {"data": [[1.73066802E12, 0.0], [1.73066796E12, 0.0]], "isOverall": false, "label": "https://www.echotex.com/about", "isController": false}, {"data": [[1.73066802E12, 0.0], [1.73066796E12, 0.0]], "isOverall": false, "label": "https://www.echotex.com/careers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73066802E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 268.0, "minX": 1.73066796E12, "maxY": 8259.0, "series": [{"data": [[1.73066802E12, 8259.0], [1.73066796E12, 2632.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73066802E12, 2247.2000000000016], [1.73066796E12, 2029.4000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73066802E12, 5567.399999999997], [1.73066796E12, 2632.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73066802E12, 3116.5999999999995], [1.73066796E12, 2445.299999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.73066802E12, 268.0], [1.73066796E12, 268.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73066802E12, 594.0], [1.73066796E12, 707.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73066802E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 275.0, "minX": 1.0, "maxY": 4419.5, "series": [{"data": [[32.0, 889.5], [2.0, 3007.0], [34.0, 615.5], [38.0, 592.0], [40.0, 577.0], [15.0, 1946.0], [16.0, 566.5], [4.0, 1968.0], [1.0, 4419.5], [5.0, 798.0], [22.0, 586.0], [26.0, 626.0], [27.0, 615.0], [30.0, 543.5], [31.0, 582.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 275.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 40.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 275.0, "minX": 1.0, "maxY": 1056.0, "series": [{"data": [[32.0, 298.0], [2.0, 295.5], [34.0, 294.0], [38.0, 290.5], [40.0, 290.0], [15.0, 1056.0], [16.0, 280.0], [4.0, 544.0], [1.0, 419.5], [5.0, 288.0], [22.0, 303.0], [26.0, 296.5], [27.0, 291.0], [30.0, 285.0], [31.0, 294.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 275.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 40.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.6833333333333333, "minX": 1.73066796E12, "maxY": 3.716666666666667, "series": [{"data": [[1.73066802E12, 3.716666666666667], [1.73066796E12, 1.6833333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73066802E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.73066796E12, "maxY": 4.183333333333334, "series": [{"data": [[1.73066802E12, 4.183333333333334], [1.73066796E12, 1.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73066802E12, 0.016666666666666666]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73066802E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.73066796E12, "maxY": 1.1333333333333333, "series": [{"data": [[1.73066802E12, 1.1333333333333333], [1.73066796E12, 0.2]], "isOverall": false, "label": "https://www.echotex.com/careers-success", "isController": false}, {"data": [[1.73066802E12, 0.016666666666666666]], "isOverall": false, "label": "https://www.echotex.com/careers-failure", "isController": false}, {"data": [[1.73066802E12, 1.1333333333333333], [1.73066796E12, 0.2]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.73066802E12, 1.0], [1.73066796E12, 0.35]], "isOverall": false, "label": "https://www.echotex.com/about-success", "isController": false}, {"data": [[1.73066802E12, 0.95], [1.73066796E12, 0.4]], "isOverall": false, "label": "https://www.echotex.com/-success", "isController": false}, {"data": [[1.73066802E12, 0.016666666666666666]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.73066802E12, 1.1], [1.73066796E12, 0.25]], "isOverall": false, "label": "https://www.echotex.com/new-index-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73066802E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.73066796E12, "maxY": 5.316666666666666, "series": [{"data": [[1.73066802E12, 5.316666666666666], [1.73066796E12, 1.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73066802E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73066802E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

